//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

using System.Buffers;
using System.Collections.Immutable;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Generated;

/// <summary>
/// ogmios
/// </summary>
public readonly partial struct Ogmios
{
    /// <summary>
    /// Generated from JSON Schema.
    /// </summary>
    public readonly partial struct SubmitTransactionFailure
    {
        /// <summary>
        /// SubmitTransactionFailure<NetworkMismatch>
        /// </summary>
        /// <remarks>
        /// <para>
        /// Some discriminated entities in the transaction are configured for another network. In fact, payment addresses, stake addresses and stake pool registration certificates are bound to a specific network identifier. This identifier must match the network you're trying to submit them to. Since the Alonzo era, transactions themselves may also contain a network identifier. The field 'data.expectedNetwork' indicates what is the currrently expected network. The field 'data.discriminatedType' indicates what type of entity is causing an issue here. And 'data.invalidEntities' lists all the culprits found in the transaction. The latter isn't present when the transaction's network identifier itself is wrong.
        /// </para>
        /// </remarks>
        public readonly partial struct SubmitTransactionFailureNetworkMismatch
        {
            /// <summary>
            /// Generated from JSON Schema.
            /// </summary>
            [System.Text.Json.Serialization.JsonConverter(typeof(Corvus.Json.Internal.JsonValueConverter<DataEntity>))]
            public readonly partial struct DataEntity
                : IJsonValue<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity>
            {
                private readonly Backing backing;
                private readonly JsonElement jsonElementBacking;
                private readonly ImmutableList<JsonObjectProperty> objectBacking;

                /// <summary>
                /// Initializes a new instance of the <see cref="DataEntity"/> struct.
                /// </summary>
                public DataEntity()
                {
                    this.jsonElementBacking = default;
                    this.backing = Backing.JsonElement;
                    this.objectBacking = ImmutableList<JsonObjectProperty>.Empty;
                }

                /// <summary>
                /// Initializes a new instance of the <see cref="DataEntity"/> struct.
                /// </summary>
                /// <param name="value">The value from which to construct the instance.</param>
                public DataEntity(in JsonElement value)
                {
                    this.jsonElementBacking = value;
                    this.backing = Backing.JsonElement;
                    this.objectBacking = ImmutableList<JsonObjectProperty>.Empty;
                }

                /// <summary>
                /// Initializes a new instance of the <see cref="DataEntity"/> struct.
                /// </summary>
                /// <param name="value">The value from which to construct the instance.</param>
                public DataEntity(ImmutableList<JsonObjectProperty> value)
                {
                    this.backing = Backing.Object;
                    this.jsonElementBacking = default;
                    this.objectBacking = value;
                }

                /// <summary>
                /// Gets the schema location from which this type was generated.
                /// </summary>
                public static string SchemaLocation { get; } = "https://endjin.com/Users/davebeaumont/source/cardano-public/OgmiosDotnet/src/Domain/Schemas/Ogmios/Generated/ogmios.json#/definitions/SubmitTransactionFailure/oneOf/25/properties/data";

                /// <summary>
                /// Gets a Null instance.
                /// </summary>
                public static DataEntity Null { get; } = new(JsonValueHelpers.NullElement);

                /// <summary>
                /// Gets an Undefined instance.
                /// </summary>
                public static DataEntity Undefined { get; }

                /// <summary>
                /// Gets the default instance.
                /// </summary>
                public static DataEntity DefaultInstance { get; }

                /// <inheritdoc/>
                public JsonAny AsAny
                {
                    get
                    {
                        if ((this.backing & Backing.JsonElement) != 0)
                        {
                            return new(this.jsonElementBacking);
                        }

                        if ((this.backing & Backing.Object) != 0)
                        {
                            return new(this.objectBacking);
                        }

                        if ((this.backing & Backing.Null) != 0)
                        {
                            return JsonAny.Null;
                        }

                        return JsonAny.Undefined;
                    }
                }

                /// <inheritdoc/>
                public JsonElement AsJsonElement
                {
                    get
                    {
                        if ((this.backing & Backing.JsonElement) != 0)
                        {
                            return this.jsonElementBacking;
                        }

                        if ((this.backing & Backing.Object) != 0)
                        {
                            return JsonValueHelpers.ObjectToJsonElement(this.objectBacking);
                        }

                        if ((this.backing & Backing.Null) != 0)
                        {
                            return JsonValueHelpers.NullElement;
                        }

                        return default;
                    }
                }

                /// <inheritdoc/>
                JsonString IJsonValue.AsString
                {
                    get
                    {
                        if ((this.backing & Backing.JsonElement) != 0)
                        {
                            return new(this.jsonElementBacking);
                        }

                        throw new InvalidOperationException();
                    }
                }

                /// <inheritdoc/>
                JsonBoolean IJsonValue.AsBoolean
                {
                    get
                    {
                        if ((this.backing & Backing.JsonElement) != 0)
                        {
                            return new(this.jsonElementBacking);
                        }

                        throw new InvalidOperationException();
                    }
                }

                /// <inheritdoc/>
                JsonNumber IJsonValue.AsNumber
                {
                    get
                    {
                        if ((this.backing & Backing.JsonElement) != 0)
                        {
                            return new(this.jsonElementBacking);
                        }

                        throw new InvalidOperationException();
                    }
                }

                /// <inheritdoc/>
                public JsonObject AsObject
                {
                    get
                    {
                        if ((this.backing & Backing.JsonElement) != 0)
                        {
                            return new(this.jsonElementBacking);
                        }

                        if ((this.backing & Backing.Object) != 0)
                        {
                            return new(this.objectBacking);
                        }

                        throw new InvalidOperationException();
                    }
                }

                /// <inheritdoc/>
                JsonArray IJsonValue.AsArray
                {
                    get
                    {
                        if ((this.backing & Backing.JsonElement) != 0)
                        {
                            return new(this.jsonElementBacking);
                        }

                        throw new InvalidOperationException();
                    }
                }

                /// <summary>
                /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities" />.
                /// </summary>
                public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities AsRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities
                {
                    get
                    {
                        return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities>();
                    }
                }

                /// <summary>
                /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities" />.
                /// </summary>
                public bool IsRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities
                {
                    get
                    {
                        return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities>().IsValid();
                    }
                }

                /// <summary>
                /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities" />.
                /// </summary>
                public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities AsDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities
                {
                    get
                    {
                        return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities>();
                    }
                }

                /// <summary>
                /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities" />.
                /// </summary>
                public bool IsDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities
                {
                    get
                    {
                        return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities>().IsValid();
                    }
                }

                /// <summary>
                /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1" />.
                /// </summary>
                public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1 AsDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1
                {
                    get
                    {
                        return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1>();
                    }
                }

                /// <summary>
                /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1" />.
                /// </summary>
                public bool IsDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1
                {
                    get
                    {
                        return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1>().IsValid();
                    }
                }

                /// <summary>
                /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork" />.
                /// </summary>
                public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork AsRequiredDiscriminatedTypeAndExpectedNetwork
                {
                    get
                    {
                        return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork>();
                    }
                }

                /// <summary>
                /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork" />.
                /// </summary>
                public bool IsRequiredDiscriminatedTypeAndExpectedNetwork
                {
                    get
                    {
                        return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork>().IsValid();
                    }
                }

                /// <inheritdoc/>
                public bool HasJsonElementBacking
                {
                    get
                    {
                        return (this.backing & Backing.JsonElement) != 0;
                    }
                }

                /// <inheritdoc/>
                public bool HasDotnetBacking
                {
                    get
                    {
                        return (this.backing & Backing.Dotnet) != 0;
                    }
                }

                /// <inheritdoc/>
                public JsonValueKind ValueKind
                {
                    get
                    {
                        if ((this.backing & Backing.JsonElement) != 0)
                        {
                            return this.jsonElementBacking.ValueKind;
                        }

                        if ((this.backing & Backing.Object) != 0)
                        {
                            return JsonValueKind.Object;
                        }

                        return JsonValueKind.Undefined;
                    }
                }

                /// <summary>
                /// Conversion from JsonAny.
                /// </summary>
                /// <param name="value">The value from which to convert.</param>
                public static implicit operator DataEntity(JsonAny value)
                {
                    return value.As<DataEntity>();
                }

                /// <summary>
                /// Conversion to JsonAny.
                /// </summary>
                /// <param name="value">The value from which to convert.</param>
                public static implicit operator JsonAny(DataEntity value)
                {
                    return value.AsAny;
                }

                /// <summary>
                /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities"/>.
                /// </summary>
                /// <param name="value">The value from which to convert.</param>
                public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities(DataEntity value)
                {
                    return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities>();
                }

                /// <summary>
                /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities"/>.
                /// </summary>
                /// <param name="value">The value from which to convert.</param>
                public static implicit operator DataEntity(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities value)
                {
                    return value.As<DataEntity>();
                }

                /// <summary>
                /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities"/>.
                /// </summary>
                /// <param name="value">The value from which to convert.</param>
                public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities(DataEntity value)
                {
                    return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities>();
                }

                /// <summary>
                /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities"/>.
                /// </summary>
                /// <param name="value">The value from which to convert.</param>
                public static implicit operator DataEntity(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities value)
                {
                    return value.As<DataEntity>();
                }

                /// <summary>
                /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1"/>.
                /// </summary>
                /// <param name="value">The value from which to convert.</param>
                public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1(DataEntity value)
                {
                    return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1>();
                }

                /// <summary>
                /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1"/>.
                /// </summary>
                /// <param name="value">The value from which to convert.</param>
                public static implicit operator DataEntity(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1 value)
                {
                    return value.As<DataEntity>();
                }

                /// <summary>
                /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork"/>.
                /// </summary>
                /// <param name="value">The value from which to convert.</param>
                public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork(DataEntity value)
                {
                    return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork>();
                }

                /// <summary>
                /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork"/>.
                /// </summary>
                /// <param name="value">The value from which to convert.</param>
                public static implicit operator DataEntity(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork value)
                {
                    return value.As<DataEntity>();
                }

                /// <summary>
                /// Operator ==.
                /// </summary>
                /// <param name="left">The lhs of the operator.</param>
                /// <param name="right">The rhs of the operator.</param>
                /// <returns>
                /// <c>True</c> if the values are equal.
                /// </returns>
                public static bool operator ==(in DataEntity left, in DataEntity right)
                {
                    return left.Equals(right);
                }

                /// <summary>
                /// Operator !=.
                /// </summary>
                /// <param name="left">The lhs of the operator.</param>
                /// <param name="right">The rhs of the operator.</param>
                /// <returns>
                /// <c>True</c> if the values are not equal.
                /// </returns>
                public static bool operator !=(in DataEntity left, in DataEntity right)
                {
                    return !left.Equals(right);
                }

                /// <summary>
                /// Gets an instance of the JSON value from a <see cref="JsonElement"/> value.
                /// </summary>
                /// <param name="value">The <see cref="JsonElement"/> value from which to instantiate the instance.</param>
                /// <returns>An instance of this type, initialized from the <see cref="JsonElement"/>.</returns>
                /// <remarks>The returned value will have a <see cref = "IJsonValue.ValueKind"/> of <see cref = "JsonValueKind.Undefined"/> if the
                /// value cannot be constructed from the given instance (e.g. because they have an incompatible .NET backing type).
                /// </remarks>
                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                public static DataEntity FromJson(in JsonElement value)
                {
                    return new(value);
                }

                /// <summary>
                /// Gets an instance of the JSON value from a <see cref="JsonAny"/> value.
                /// </summary>
                /// <param name="value">The <see cref="JsonAny"/> value from which to instantiate the instance.</param>
                /// <returns>An instance of this type, initialized from the <see cref="JsonAny"/> value.</returns>
                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                public static DataEntity FromAny(in JsonAny value)
                {
                    if (value.HasJsonElementBacking)
                    {
                        return new(value.AsJsonElement);
                    }

                    return value.ValueKind switch
                    {
                        JsonValueKind.Object => new(value.AsObject.AsPropertyBacking()),
                        JsonValueKind.Null => Null,
                        _ => Undefined,
                    };
                }

#if NET8_0_OR_GREATER
                /// <summary>
                /// Gets an instance of the JSON value from the provided value.
                /// </summary>
                /// <typeparam name="TValue">The type of the value.</typeparam>
                /// <param name="value">The value from which to instantiate the instance.</param>
                /// <returns>An instance of this type, initialized from the provided value.</returns>
                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                static DataEntity IJsonValue<DataEntity>.FromBoolean<TValue>(in TValue value)
                {
                    if (value.HasJsonElementBacking)
                    {
                        return new(value.AsJsonElement);
                    }

                    return Undefined;
                }
#endif

#if NET8_0_OR_GREATER
                /// <summary>
                /// Gets an instance of the JSON value from the provided value.
                /// </summary>
                /// <typeparam name="TValue">The type of the value.</typeparam>
                /// <param name="value">The value from which to instantiate the instance.</param>
                /// <returns>An instance of this type, initialized from the provided value.</returns>
                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                static DataEntity IJsonValue<DataEntity>.FromString<TValue>(in TValue value)
                {
                    if (value.HasJsonElementBacking)
                    {
                        return new(value.AsJsonElement);
                    }

                    return Undefined;
                }
#endif

#if NET8_0_OR_GREATER
                /// <summary>
                /// Gets an instance of the JSON value from the provided value.
                /// </summary>
                /// <typeparam name="TValue">The type of the value.</typeparam>
                /// <param name="value">The value from which to instantiate the instance.</param>
                /// <returns>An instance of this type, initialized from the provided value.</returns>
                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                static DataEntity IJsonValue<DataEntity>.FromNumber<TValue>(in TValue value)
                {
                    if (value.HasJsonElementBacking)
                    {
                        return new(value.AsJsonElement);
                    }

                    return Undefined;
                }
#endif

                /// <summary>
                /// Gets an instance of the JSON value from the provided value.
                /// </summary>
                /// <typeparam name="TValue">The type of the value.</typeparam>
                /// <param name="value">The value from which to instantiate the instance.</param>
                /// <returns>An instance of this type, initialized from the provided value.</returns>
                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                public static DataEntity FromObject<TValue>(in TValue value)
                    where TValue : struct, IJsonObject<TValue>
                {
                    if (value.HasJsonElementBacking)
                    {
                        return new(value.AsJsonElement);
                    }

                    return value.ValueKind switch
                    {
                        JsonValueKind.Object => new(value.AsPropertyBacking()),
                        JsonValueKind.Null => Null,
                        _ => Undefined,
                    };
                }

#if NET8_0_OR_GREATER
                /// <summary>
                /// Gets an instance of the JSON value from the provided value.
                /// </summary>
                /// <typeparam name="TValue">The type of the value.</typeparam>
                /// <param name="value">The value from which to instantiate the instance.</param>
                /// <returns>An instance of this type, initialized from the provided value.</returns>
                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                static DataEntity IJsonValue<DataEntity>.FromArray<TValue>(in TValue value)
                {
                    if (value.HasJsonElementBacking)
                    {
                        return new(value.AsJsonElement);
                    }

                    return Undefined;
                }
#endif

                /// <summary>
                /// Parses the DataEntity.
                /// </summary>
                /// <param name="source">The source of the JSON string to parse.</param>
                /// <param name="options">The (optional) JsonDocumentOptions.</param>
                public static DataEntity Parse(string source, JsonDocumentOptions options = default)
                {
                    using var jsonDocument = JsonDocument.Parse(source, options);
                    return new(jsonDocument.RootElement.Clone());
                }

                /// <summary>
                /// Parses the DataEntity.
                /// </summary>
                /// <param name="source">The source of the JSON string to parse.</param>
                /// <param name="options">The (optional) JsonDocumentOptions.</param>
                public static DataEntity Parse(Stream source, JsonDocumentOptions options = default)
                {
                    using var jsonDocument = JsonDocument.Parse(source, options);
                    return new(jsonDocument.RootElement.Clone());
                }

                /// <summary>
                /// Parses the DataEntity.
                /// </summary>
                /// <param name="source">The source of the JSON string to parse.</param>
                /// <param name="options">The (optional) JsonDocumentOptions.</param>
                public static DataEntity Parse(ReadOnlyMemory<byte> source, JsonDocumentOptions options = default)
                {
                    using var jsonDocument = JsonDocument.Parse(source, options);
                    return new(jsonDocument.RootElement.Clone());
                }

                /// <summary>
                /// Parses the DataEntity.
                /// </summary>
                /// <param name="source">The source of the JSON string to parse.</param>
                /// <param name="options">The (optional) JsonDocumentOptions.</param>
                public static DataEntity Parse(ReadOnlyMemory<char> source, JsonDocumentOptions options = default)
                {
                    using var jsonDocument = JsonDocument.Parse(source, options);
                    return new(jsonDocument.RootElement.Clone());
                }

                /// <summary>
                /// Parses the DataEntity.
                /// </summary>
                /// <param name="source">The source of the JSON string to parse.</param>
                /// <param name="options">The (optional) JsonDocumentOptions.</param>
                public static DataEntity Parse(ReadOnlySequence<byte> source, JsonDocumentOptions options = default)
                {
                    using var jsonDocument = JsonDocument.Parse(source, options);
                    return new(jsonDocument.RootElement.Clone());
                }

                /// <summary>
                /// Parses the DataEntity.
                /// </summary>
                /// <param name="source">The source of the JSON string to parse.</param>
                public static DataEntity ParseValue(string source)
                {
#if NET8_0_OR_GREATER
                    return IJsonValue<DataEntity>.ParseValue(source);
#else
                    return JsonValueHelpers.ParseValue<DataEntity>(source.AsSpan());
#endif
                }

                /// <summary>
                /// Parses the DataEntity.
                /// </summary>
                /// <param name="source">The source of the JSON string to parse.</param>
                public static DataEntity ParseValue(ReadOnlySpan<char> source)
                {
#if NET8_0_OR_GREATER
                    return IJsonValue<DataEntity>.ParseValue(source);
#else
                    return JsonValueHelpers.ParseValue<DataEntity>(source);
#endif
                }

                /// <summary>
                /// Parses the DataEntity.
                /// </summary>
                /// <param name="source">The source of the JSON string to parse.</param>
                public static DataEntity ParseValue(ReadOnlySpan<byte> source)
                {
#if NET8_0_OR_GREATER
                    return IJsonValue<DataEntity>.ParseValue(source);
#else
                    return JsonValueHelpers.ParseValue<DataEntity>(source);
#endif
                }

                /// <summary>
                /// Parses the DataEntity.
                /// </summary>
                /// <param name="source">The source of the JSON string to parse.</param>
                public static DataEntity ParseValue(ref Utf8JsonReader source)
                {
#if NET8_0_OR_GREATER
                    return IJsonValue<DataEntity>.ParseValue(ref source);
#else
                    return JsonValueHelpers.ParseValue<DataEntity>(ref source);
#endif
                }

                /// <summary>
                /// Gets the value as an instance of the target value.
                /// </summary>
                /// <typeparam name="TTarget">The type of the target.</typeparam>
                /// <returns>An instance of the target type.</returns>
                [MethodImpl(MethodImplOptions.AggressiveInlining)]
                public TTarget As<TTarget>()
                    where TTarget : struct, IJsonValue<TTarget>
                {
#if NET8_0_OR_GREATER
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        return TTarget.FromJson(this.jsonElementBacking);
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        return TTarget.FromObject(this.AsObject);
                    }

                    if ((this.backing & Backing.Null) != 0)
                    {
                        return TTarget.Null;
                    }

                    return TTarget.Undefined;
#else
                    return this.As<DataEntity, TTarget>();
#endif
                }

                /// <inheritdoc/>
                public override bool Equals(object? obj)
                {
                    return
                        (obj is IJsonValue jv && this.Equals(jv.As<DataEntity>())) ||
                        (obj is null && this.IsNull());
                }

                /// <inheritdoc/>
                public bool Equals<T>(in T other)
                    where T : struct, IJsonValue<T>
                {
                    return this.Equals(other.As<DataEntity>());
                }

                /// <summary>
                /// Equality comparison.
                /// </summary>
                /// <param name="other">The other item with which to compare.</param>
                /// <returns><see langword="true"/> if the values were equal.</returns>
                public bool Equals(in DataEntity other)
                {
                    JsonValueKind thisKind = this.ValueKind;
                    JsonValueKind otherKind = other.ValueKind;
                    if (thisKind != otherKind)
                    {
                        return false;
                    }

                    if (thisKind == JsonValueKind.Null || thisKind == JsonValueKind.Undefined)
                    {
                        return true;
                    }

                    if (thisKind == JsonValueKind.Object)
                    {
                        JsonObject thisObject = this.AsObject;
                        JsonObject otherObject = other.AsObject;
                        int count = 0;
                        foreach (JsonObjectProperty property in thisObject.EnumerateObject())
                        {
                            if (!otherObject.TryGetProperty(property.Name, out JsonAny value) || !property.Value.Equals(value))
                            {
                                return false;
                            }

                            count++;
                        }

                        int otherCount = 0;
                        foreach (JsonObjectProperty otherProperty in otherObject.EnumerateObject())
                        {
                            otherCount++;
                            if (otherCount > count)
                            {
                                return false;
                            }
                        }

                        return count == otherCount;
                    }

                    return false;
                }

                /// <inheritdoc/>
                public void WriteTo(Utf8JsonWriter writer)
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Undefined)
                        {
                            this.jsonElementBacking.WriteTo(writer);
                        }

                        return;
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        JsonValueHelpers.WriteProperties(this.objectBacking, writer);

                        return;
                    }

                    if ((this.backing & Backing.Null) != 0)
                    {
                        writer.WriteNullValue();

                        return;
                    }
                }

                /// <inheritdoc/>
                public override int GetHashCode()
                {
                    return this.ValueKind switch
                    {
                        JsonValueKind.Array => JsonValueHelpers.GetArrayHashCode(((IJsonValue)this).AsArray),
                        JsonValueKind.Object => JsonValueHelpers.GetObjectHashCode(this),
                        JsonValueKind.Number => JsonValueHelpers.GetHashCodeForNumber(((IJsonValue)this).AsNumber),
                        JsonValueKind.String => JsonValueHelpers.GetHashCodeForString(((IJsonValue)this).AsString),
                        JsonValueKind.True => true.GetHashCode(),
                        JsonValueKind.False => false.GetHashCode(),
                        JsonValueKind.Null => JsonValueHelpers.NullHashCode,
                        _ => JsonValueHelpers.UndefinedHashCode,
                    };
                }

                /// <inheritdoc/>
                public override string ToString()
                {
                    return this.Serialize();
                }

                /// <summary>
                /// Matches the value against the composed values, and returns the result of calling the provided match function for the first match found.
                /// </summary>
                /// <typeparam name="TIn">The immutable context to pass in to the match function.</typeparam>
                /// <typeparam name="TOut">The result of calling the match function.</typeparam>
                /// <param name="context">The context to pass to the match function.</param>
                /// <param name="matchRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities"/>.</param>
                /// <param name="matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities"/>.</param>
                /// <param name="matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1"/>.</param>
                /// <param name="matchRequiredDiscriminatedTypeAndExpectedNetwork">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork"/>.</param>
                /// <param name="defaultMatch">Match any other value.</param>
                /// <returns>An instance of the value returned by the match function.</returns>
                public TOut Match<TIn, TOut>(
                    in TIn context,
                    Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities, TIn, TOut> matchRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities,
                    Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities, TIn, TOut> matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities,
                    Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1, TIn, TOut> matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1,
                    Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork, TIn, TOut> matchRequiredDiscriminatedTypeAndExpectedNetwork,
                    Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity, TIn, TOut> defaultMatch)
                {
                    Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities matchRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntitiesValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities>();
                    if (matchRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntitiesValue.IsValid())
                    {
                        return matchRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities(matchRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntitiesValue, context);
                    }

                    Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntitiesValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities>();
                    if (matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntitiesValue.IsValid())
                    {
                        return matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities(matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntitiesValue, context);
                    }

                    Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1 matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1Value = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1>();
                    if (matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1Value.IsValid())
                    {
                        return matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1(matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1Value, context);
                    }

                    Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork matchRequiredDiscriminatedTypeAndExpectedNetworkValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork>();
                    if (matchRequiredDiscriminatedTypeAndExpectedNetworkValue.IsValid())
                    {
                        return matchRequiredDiscriminatedTypeAndExpectedNetwork(matchRequiredDiscriminatedTypeAndExpectedNetworkValue, context);
                    }

                    return defaultMatch(this, context);
                }

                /// <summary>
                /// Matches the value against the composed values, and returns the result of calling the provided match function for the first match found.
                /// </summary>
                /// <typeparam name="TOut">The result of calling the match function.</typeparam>
                /// <param name="matchRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities"/>.</param>
                /// <param name="matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities"/>.</param>
                /// <param name="matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1"/>.</param>
                /// <param name="matchRequiredDiscriminatedTypeAndExpectedNetwork">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork"/>.</param>
                /// <param name="defaultMatch">Match any other value.</param>
                /// <returns>An instance of the value returned by the match function.</returns>
                public TOut Match<TOut>(
                    Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities, TOut> matchRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities,
                    Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities, TOut> matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities,
                    Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1, TOut> matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1,
                    Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork, TOut> matchRequiredDiscriminatedTypeAndExpectedNetwork,
                    Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity, TOut> defaultMatch)
                {
                    Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities matchRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntitiesValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities>();
                    if (matchRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntitiesValue.IsValid())
                    {
                        return matchRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities(matchRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntitiesValue);
                    }

                    Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntitiesValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities>();
                    if (matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntitiesValue.IsValid())
                    {
                        return matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities(matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntitiesValue);
                    }

                    Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1 matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1Value = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1>();
                    if (matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1Value.IsValid())
                    {
                        return matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1(matchDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1Value);
                    }

                    Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork matchRequiredDiscriminatedTypeAndExpectedNetworkValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork>();
                    if (matchRequiredDiscriminatedTypeAndExpectedNetworkValue.IsValid())
                    {
                        return matchRequiredDiscriminatedTypeAndExpectedNetwork(matchRequiredDiscriminatedTypeAndExpectedNetworkValue);
                    }

                    return defaultMatch(this);
                }

                /// <summary>
                /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities" />.
                /// </summary>
                /// <param name="result">The result of the conversions.</param>
                /// <returns><see langword="true" /> if the conversion was valid.</returns>
                public bool TryGetAsRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities result)
                {
                    result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities>();
                    return result.IsValid();
                }

                /// <summary>
                /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities" />.
                /// </summary>
                /// <param name="result">The result of the conversions.</param>
                /// <returns><see langword="true" /> if the conversion was valid.</returns>
                public bool TryGetAsDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities result)
                {
                    result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities>();
                    return result.IsValid();
                }

                /// <summary>
                /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1" />.
                /// </summary>
                /// <param name="result">The result of the conversions.</param>
                /// <returns><see langword="true" /> if the conversion was valid.</returns>
                public bool TryGetAsDataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1 result)
                {
                    result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.DataEntityRequiredDiscriminatedTypeAndExpectedNetworkAndInvalidEntities1>();
                    return result.IsValid();
                }

                /// <summary>
                /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork" />.
                /// </summary>
                /// <param name="result">The result of the conversions.</param>
                /// <returns><see langword="true" /> if the conversion was valid.</returns>
                public bool TryGetAsRequiredDiscriminatedTypeAndExpectedNetwork(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork result)
                {
                    result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch.DataEntity.RequiredDiscriminatedTypeAndExpectedNetwork>();
                    return result.IsValid();
                }
            }
        }
    }
}
