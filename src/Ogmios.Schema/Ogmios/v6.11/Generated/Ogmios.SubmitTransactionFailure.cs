//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

using System.Buffers;
using System.Collections.Immutable;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Generated;

/// <summary>
/// ogmios
/// </summary>
public readonly partial struct Ogmios
{
    /// <summary>
    /// Generated from JSON Schema.
    /// </summary>
    [System.Text.Json.Serialization.JsonConverter(typeof(Corvus.Json.Internal.JsonValueConverter<SubmitTransactionFailure>))]
    public readonly partial struct SubmitTransactionFailure
        : IJsonValue<Generated.Ogmios.SubmitTransactionFailure>
    {
        private readonly Backing backing;
        private readonly JsonElement jsonElementBacking;
        private readonly ImmutableList<JsonObjectProperty> objectBacking;

        /// <summary>
        /// Initializes a new instance of the <see cref="SubmitTransactionFailure"/> struct.
        /// </summary>
        public SubmitTransactionFailure()
        {
            this.jsonElementBacking = default;
            this.backing = Backing.JsonElement;
            this.objectBacking = ImmutableList<JsonObjectProperty>.Empty;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SubmitTransactionFailure"/> struct.
        /// </summary>
        /// <param name="value">The value from which to construct the instance.</param>
        public SubmitTransactionFailure(in JsonElement value)
        {
            this.jsonElementBacking = value;
            this.backing = Backing.JsonElement;
            this.objectBacking = ImmutableList<JsonObjectProperty>.Empty;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SubmitTransactionFailure"/> struct.
        /// </summary>
        /// <param name="value">The value from which to construct the instance.</param>
        public SubmitTransactionFailure(ImmutableList<JsonObjectProperty> value)
        {
            this.backing = Backing.Object;
            this.jsonElementBacking = default;
            this.objectBacking = value;
        }

        /// <summary>
        /// Gets the schema location from which this type was generated.
        /// </summary>
        public static string SchemaLocation { get; } = "https://endjin.com/Users/davebeaumont/source/cardano-public/OgmiosDotnet/src/Ogmios.Schema/Ogmios/v6.11/Source/ogmios.json#/definitions/SubmitTransactionFailure";

        /// <summary>
        /// Gets a Null instance.
        /// </summary>
        public static SubmitTransactionFailure Null { get; } = new(JsonValueHelpers.NullElement);

        /// <summary>
        /// Gets an Undefined instance.
        /// </summary>
        public static SubmitTransactionFailure Undefined { get; }

        /// <summary>
        /// Gets the default instance.
        /// </summary>
        public static SubmitTransactionFailure DefaultInstance { get; }

        /// <inheritdoc/>
        public JsonAny AsAny
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    return new(this.jsonElementBacking);
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    return new(this.objectBacking);
                }

                if ((this.backing & Backing.Null) != 0)
                {
                    return JsonAny.Null;
                }

                return JsonAny.Undefined;
            }
        }

        /// <inheritdoc/>
        public JsonElement AsJsonElement
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    return this.jsonElementBacking;
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    return JsonValueHelpers.ObjectToJsonElement(this.objectBacking);
                }

                if ((this.backing & Backing.Null) != 0)
                {
                    return JsonValueHelpers.NullElement;
                }

                return default;
            }
        }

        /// <inheritdoc/>
        JsonString IJsonValue.AsString
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    return new(this.jsonElementBacking);
                }

                throw new InvalidOperationException();
            }
        }

        /// <inheritdoc/>
        JsonBoolean IJsonValue.AsBoolean
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    return new(this.jsonElementBacking);
                }

                throw new InvalidOperationException();
            }
        }

        /// <inheritdoc/>
        JsonNumber IJsonValue.AsNumber
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    return new(this.jsonElementBacking);
                }

                throw new InvalidOperationException();
            }
        }

        /// <inheritdoc/>
        public JsonObject AsObject
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    return new(this.jsonElementBacking);
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    return new(this.objectBacking);
                }

                throw new InvalidOperationException();
            }
        }

        /// <inheritdoc/>
        JsonArray IJsonValue.AsArray
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    return new(this.jsonElementBacking);
                }

                throw new InvalidOperationException();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch AsSubmitTransactionFailureEraMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch" />.
        /// </summary>
        public bool IsSubmitTransactionFailureEraMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories AsSubmitTransactionFailureInvalidSignatories
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories" />.
        /// </summary>
        public bool IsSubmitTransactionFailureInvalidSignatories
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers AsSubmitTransactionFailureMissingRedeemers
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers" />.
        /// </summary>
        public bool IsSubmitTransactionFailureMissingRedeemers
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums AsSubmitTransactionFailureExtraneousDatums
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums" />.
        /// </summary>
        public bool IsSubmitTransactionFailureExtraneousDatums
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch AsSubmitTransactionFailureScriptIntegrityHashMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch" />.
        /// </summary>
        public bool IsSubmitTransactionFailureScriptIntegrityHashMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs AsSubmitTransactionFailureOrphanScriptInputs
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs" />.
        /// </summary>
        public bool IsSubmitTransactionFailureOrphanScriptInputs
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts AsSubmitTransactionFailureMalformedScripts
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts" />.
        /// </summary>
        public bool IsSubmitTransactionFailureMalformedScripts
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval AsSubmitTransactionFailureOutsideOfValidityInterval
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval" />.
        /// </summary>
        public bool IsSubmitTransactionFailureOutsideOfValidityInterval
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories AsSubmitTransactionFailureMissingSignatories
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories" />.
        /// </summary>
        public bool IsSubmitTransactionFailureMissingSignatories
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge AsSubmitTransactionFailureTransactionTooLarge
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge" />.
        /// </summary>
        public bool IsSubmitTransactionFailureTransactionTooLarge
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge AsSubmitTransactionFailureValueTooLarge
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge" />.
        /// </summary>
        public bool IsSubmitTransactionFailureValueTooLarge
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet AsSubmitTransactionFailureEmptyInputSet
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet" />.
        /// </summary>
        public bool IsSubmitTransactionFailureEmptyInputSet
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall AsSubmitTransactionFailureTransactionFeeTooSmall
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall" />.
        /// </summary>
        public bool IsSubmitTransactionFailureTransactionFeeTooSmall
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved AsSubmitTransactionFailureValueNotConserved
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved" />.
        /// </summary>
        public bool IsSubmitTransactionFailureValueNotConserved
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch AsSubmitTransactionFailureNetworkMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch" />.
        /// </summary>
        public bool IsSubmitTransactionFailureNetworkMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs AsSubmitTransactionFailureInsufficientlyFundedOutputs
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs" />.
        /// </summary>
        public bool IsSubmitTransactionFailureInsufficientlyFundedOutputs
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge AsSubmitTransactionFailureBootstrapAttributesTooLarge
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge" />.
        /// </summary>
        public bool IsSubmitTransactionFailureBootstrapAttributesTooLarge
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda AsSubmitTransactionFailureMintingOrBurningAda
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda" />.
        /// </summary>
        public bool IsSubmitTransactionFailureMintingOrBurningAda
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral AsSubmitTransactionFailureInsufficientCollateral
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral" />.
        /// </summary>
        public bool IsSubmitTransactionFailureInsufficientCollateral
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts AsSubmitTransactionFailureMissingScripts
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts" />.
        /// </summary>
        public bool IsSubmitTransactionFailureMissingScripts
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript AsSubmitTransactionFailureCollateralLockedByScript
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript" />.
        /// </summary>
        public bool IsSubmitTransactionFailureCollateralLockedByScript
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot AsSubmitTransactionFailureUnforeseeableSlot
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot" />.
        /// </summary>
        public bool IsSubmitTransactionFailureUnforeseeableSlot
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs AsSubmitTransactionFailureTooManyCollateralInputs
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs" />.
        /// </summary>
        public bool IsSubmitTransactionFailureTooManyCollateralInputs
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs AsSubmitTransactionFailureMissingCollateralInputs
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs" />.
        /// </summary>
        public bool IsSubmitTransactionFailureMissingCollateralInputs
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral AsSubmitTransactionFailureNonAdaCollateral
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral" />.
        /// </summary>
        public bool IsSubmitTransactionFailureNonAdaCollateral
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge AsSubmitTransactionFailureExecutionUnitsTooLarge
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge" />.
        /// </summary>
        public bool IsSubmitTransactionFailureExecutionUnitsTooLarge
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch AsSubmitTransactionFailureTotalCollateralMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch" />.
        /// </summary>
        public bool IsSubmitTransactionFailureTotalCollateralMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch AsSubmitTransactionFailureSpendsMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch" />.
        /// </summary>
        public bool IsSubmitTransactionFailureSpendsMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes AsSubmitTransactionFailureUnauthorizedVotes
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes" />.
        /// </summary>
        public bool IsSubmitTransactionFailureUnauthorizedVotes
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals AsSubmitTransactionFailureUnknownGovernanceProposals
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals" />.
        /// </summary>
        public bool IsSubmitTransactionFailureUnknownGovernanceProposals
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript AsSubmitTransactionFailureFailingNativeScript
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript" />.
        /// </summary>
        public bool IsSubmitTransactionFailureFailingNativeScript
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate AsSubmitTransactionFailureInvalidProtocolParametersUpdate
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate" />.
        /// </summary>
        public bool IsSubmitTransactionFailureInvalidProtocolParametersUpdate
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool AsSubmitTransactionFailureUnknownStakePool
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool" />.
        /// </summary>
        public bool IsSubmitTransactionFailureUnknownStakePool
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals AsSubmitTransactionFailureIncompleteWithdrawals
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals" />.
        /// </summary>
        public bool IsSubmitTransactionFailureIncompleteWithdrawals
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate AsSubmitTransactionFailureRetirementTooLate
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate" />.
        /// </summary>
        public bool IsSubmitTransactionFailureRetirementTooLate
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow AsSubmitTransactionFailureStakePoolCostTooLow
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow" />.
        /// </summary>
        public bool IsSubmitTransactionFailureStakePoolCostTooLow
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge AsSubmitTransactionFailureMetadataHashTooLarge
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge" />.
        /// </summary>
        public bool IsSubmitTransactionFailureMetadataHashTooLarge
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered AsSubmitTransactionFailureCredentialAlreadyRegistered
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered" />.
        /// </summary>
        public bool IsSubmitTransactionFailureCredentialAlreadyRegistered
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential AsSubmitTransactionFailureUnknownCredential
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential" />.
        /// </summary>
        public bool IsSubmitTransactionFailureUnknownCredential
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount AsSubmitTransactionFailureNonEmptyRewardAccount
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount" />.
        /// </summary>
        public bool IsSubmitTransactionFailureNonEmptyRewardAccount
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation AsSubmitTransactionFailureInvalidGenesisDelegation
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation" />.
        /// </summary>
        public bool IsSubmitTransactionFailureInvalidGenesisDelegation
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts AsSubmitTransactionFailureExtraneousScripts
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts" />.
        /// </summary>
        public bool IsSubmitTransactionFailureExtraneousScripts
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer AsSubmitTransactionFailureInvalidMirTransfer
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer" />.
        /// </summary>
        public bool IsSubmitTransactionFailureInvalidMirTransfer
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal AsSubmitTransactionFailureForbiddenWithdrawal
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal" />.
        /// </summary>
        public bool IsSubmitTransactionFailureForbiddenWithdrawal
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch AsSubmitTransactionFailureCredentialDepositMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch" />.
        /// </summary>
        public bool IsSubmitTransactionFailureCredentialDepositMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered AsSubmitTransactionFailureDRepAlreadyRegistered
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered" />.
        /// </summary>
        public bool IsSubmitTransactionFailureDRepAlreadyRegistered
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered AsSubmitTransactionFailureDRepNotRegistered
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered" />.
        /// </summary>
        public bool IsSubmitTransactionFailureDRepNotRegistered
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember AsSubmitTransactionFailureUnknownConstitutionalCommitteeMember
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember" />.
        /// </summary>
        public bool IsSubmitTransactionFailureUnknownConstitutionalCommitteeMember
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch AsSubmitTransactionFailureGovernanceProposalDepositMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch" />.
        /// </summary>
        public bool IsSubmitTransactionFailureGovernanceProposalDepositMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate AsSubmitTransactionFailureConflictingCommitteeUpdate
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate" />.
        /// </summary>
        public bool IsSubmitTransactionFailureConflictingCommitteeUpdate
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate AsSubmitTransactionFailureInvalidCommitteeUpdate
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate" />.
        /// </summary>
        public bool IsSubmitTransactionFailureInvalidCommitteeUpdate
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch AsSubmitTransactionFailureTreasuryWithdrawalMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch" />.
        /// </summary>
        public bool IsSubmitTransactionFailureTreasuryWithdrawalMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash AsSubmitTransactionFailureMissingMetadataHash
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash" />.
        /// </summary>
        public bool IsSubmitTransactionFailureMissingMetadataHash
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals AsSubmitTransactionFailureInvalidOrMissingPreviousProposals
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals" />.
        /// </summary>
        public bool IsSubmitTransactionFailureInvalidOrMissingPreviousProposals
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions AsSubmitTransactionFailureVotingOnExpiredActions
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions" />.
        /// </summary>
        public bool IsSubmitTransactionFailureVotingOnExpiredActions
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump AsSubmitTransactionFailureInvalidHardForkVersionBump
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump" />.
        /// </summary>
        public bool IsSubmitTransactionFailureInvalidHardForkVersionBump
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch AsSubmitTransactionFailureConstitutionGuardrailsHashMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch" />.
        /// </summary>
        public bool IsSubmitTransactionFailureConstitutionGuardrailsHashMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences AsSubmitTransactionFailureConflictingInputsAndReferences
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences" />.
        /// </summary>
        public bool IsSubmitTransactionFailureConflictingInputsAndReferences
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction AsSubmitTransactionFailureUnauthorizedGovernanceAction
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction" />.
        /// </summary>
        public bool IsSubmitTransactionFailureUnauthorizedGovernanceAction
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge AsSubmitTransactionFailureReferenceScriptsTooLarge
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge" />.
        /// </summary>
        public bool IsSubmitTransactionFailureReferenceScriptsTooLarge
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters AsSubmitTransactionFailureUnknownVoters
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters" />.
        /// </summary>
        public bool IsSubmitTransactionFailureUnknownVoters
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal AsSubmitTransactionFailureEmptyTreasuryWithdrawal
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal" />.
        /// </summary>
        public bool IsSubmitTransactionFailureEmptyTreasuryWithdrawal
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata AsSubmitTransactionFailureMissingMetadata
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata" />.
        /// </summary>
        public bool IsSubmitTransactionFailureMissingMetadata
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError AsSubmitTransactionFailureUnexpectedMempoolError
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError" />.
        /// </summary>
        public bool IsSubmitTransactionFailureUnexpectedMempoolError
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType AsSubmitTransactionFailureUnrecognizedCertificateType
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType" />.
        /// </summary>
        public bool IsSubmitTransactionFailureUnrecognizedCertificateType
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch AsSubmitTransactionFailureMetadataHashMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch" />.
        /// </summary>
        public bool IsSubmitTransactionFailureMetadataHashMismatch
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata AsSubmitTransactionFailureInvalidMetadata
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata" />.
        /// </summary>
        public bool IsSubmitTransactionFailureInvalidMetadata
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds AsSubmitTransactionFailureExecutionBudgetOutOfBounds
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds" />.
        /// </summary>
        public bool IsSubmitTransactionFailureExecutionBudgetOutOfBounds
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers AsSubmitTransactionFailureExtraneousRedeemers
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers" />.
        /// </summary>
        public bool IsSubmitTransactionFailureExtraneousRedeemers
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailureMissingCostModels" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailureMissingCostModels AsSubmitTransactionFailureMissingCostModels
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailureMissingCostModels>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailureMissingCostModels" />.
        /// </summary>
        public bool IsSubmitTransactionFailureMissingCostModels
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailureMissingCostModels>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailureMissingDatums" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailureMissingDatums AsSubmitTransactionFailureMissingDatums
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailureMissingDatums>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailureMissingDatums" />.
        /// </summary>
        public bool IsSubmitTransactionFailureMissingDatums
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailureMissingDatums>().IsValid();
            }
        }

        /// <summary>
        /// Gets the instance as a <see cref="Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference" />.
        /// </summary>
        public Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference AsSubmitTransactionFailureUnknownOutputReference
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference>();
            }
        }

        /// <summary>
        /// Gets a value indicating whether the instance is a <see cref="Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference" />.
        /// </summary>
        public bool IsSubmitTransactionFailureUnknownOutputReference
        {
            get
            {
                return this.As<Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference>().IsValid();
            }
        }

        /// <inheritdoc/>
        public bool HasJsonElementBacking
        {
            get
            {
                return (this.backing & Backing.JsonElement) != 0;
            }
        }

        /// <inheritdoc/>
        public bool HasDotnetBacking
        {
            get
            {
                return (this.backing & Backing.Dotnet) != 0;
            }
        }

        /// <inheritdoc/>
        public JsonValueKind ValueKind
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    return this.jsonElementBacking.ValueKind;
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    return JsonValueKind.Object;
                }

                return JsonValueKind.Undefined;
            }
        }

        /// <summary>
        /// Conversion from JsonAny.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(JsonAny value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to JsonAny.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator JsonAny(SubmitTransactionFailure value)
        {
            return value.AsAny;
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailureMissingDatums"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailureMissingDatums(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailureMissingDatums>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailureMissingDatums"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailureMissingDatums value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailureMissingCostModels"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailureMissingCostModels(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailureMissingCostModels>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailureMissingCostModels"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailureMissingCostModels value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Conversion to <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static explicit operator Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata(SubmitTransactionFailure value)
        {
            return value.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata>();
        }

        /// <summary>
        /// Conversion from <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata"/>.
        /// </summary>
        /// <param name="value">The value from which to convert.</param>
        public static implicit operator SubmitTransactionFailure(Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata value)
        {
            return value.As<SubmitTransactionFailure>();
        }

        /// <summary>
        /// Operator ==.
        /// </summary>
        /// <param name="left">The lhs of the operator.</param>
        /// <param name="right">The rhs of the operator.</param>
        /// <returns>
        /// <c>True</c> if the values are equal.
        /// </returns>
        public static bool operator ==(in SubmitTransactionFailure left, in SubmitTransactionFailure right)
        {
            return left.Equals(right);
        }

        /// <summary>
        /// Operator !=.
        /// </summary>
        /// <param name="left">The lhs of the operator.</param>
        /// <param name="right">The rhs of the operator.</param>
        /// <returns>
        /// <c>True</c> if the values are not equal.
        /// </returns>
        public static bool operator !=(in SubmitTransactionFailure left, in SubmitTransactionFailure right)
        {
            return !left.Equals(right);
        }

        /// <summary>
        /// Gets an instance of the JSON value from a <see cref="JsonElement"/> value.
        /// </summary>
        /// <param name="value">The <see cref="JsonElement"/> value from which to instantiate the instance.</param>
        /// <returns>An instance of this type, initialized from the <see cref="JsonElement"/>.</returns>
        /// <remarks>The returned value will have a <see cref = "IJsonValue.ValueKind"/> of <see cref = "JsonValueKind.Undefined"/> if the
        /// value cannot be constructed from the given instance (e.g. because they have an incompatible .NET backing type).
        /// </remarks>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static SubmitTransactionFailure FromJson(in JsonElement value)
        {
            return new(value);
        }

        /// <summary>
        /// Gets an instance of the JSON value from a <see cref="JsonAny"/> value.
        /// </summary>
        /// <param name="value">The <see cref="JsonAny"/> value from which to instantiate the instance.</param>
        /// <returns>An instance of this type, initialized from the <see cref="JsonAny"/> value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static SubmitTransactionFailure FromAny(in JsonAny value)
        {
            if (value.HasJsonElementBacking)
            {
                return new(value.AsJsonElement);
            }

            return value.ValueKind switch
            {
                JsonValueKind.Object => new(value.AsObject.AsPropertyBacking()),
                JsonValueKind.Null => Null,
                _ => Undefined,
            };
        }

#if NET8_0_OR_GREATER
        /// <summary>
        /// Gets an instance of the JSON value from the provided value.
        /// </summary>
        /// <typeparam name="TValue">The type of the value.</typeparam>
        /// <param name="value">The value from which to instantiate the instance.</param>
        /// <returns>An instance of this type, initialized from the provided value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static SubmitTransactionFailure IJsonValue<SubmitTransactionFailure>.FromBoolean<TValue>(in TValue value)
        {
            if (value.HasJsonElementBacking)
            {
                return new(value.AsJsonElement);
            }

            return Undefined;
        }
#endif

#if NET8_0_OR_GREATER
        /// <summary>
        /// Gets an instance of the JSON value from the provided value.
        /// </summary>
        /// <typeparam name="TValue">The type of the value.</typeparam>
        /// <param name="value">The value from which to instantiate the instance.</param>
        /// <returns>An instance of this type, initialized from the provided value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static SubmitTransactionFailure IJsonValue<SubmitTransactionFailure>.FromString<TValue>(in TValue value)
        {
            if (value.HasJsonElementBacking)
            {
                return new(value.AsJsonElement);
            }

            return Undefined;
        }
#endif

#if NET8_0_OR_GREATER
        /// <summary>
        /// Gets an instance of the JSON value from the provided value.
        /// </summary>
        /// <typeparam name="TValue">The type of the value.</typeparam>
        /// <param name="value">The value from which to instantiate the instance.</param>
        /// <returns>An instance of this type, initialized from the provided value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static SubmitTransactionFailure IJsonValue<SubmitTransactionFailure>.FromNumber<TValue>(in TValue value)
        {
            if (value.HasJsonElementBacking)
            {
                return new(value.AsJsonElement);
            }

            return Undefined;
        }
#endif

        /// <summary>
        /// Gets an instance of the JSON value from the provided value.
        /// </summary>
        /// <typeparam name="TValue">The type of the value.</typeparam>
        /// <param name="value">The value from which to instantiate the instance.</param>
        /// <returns>An instance of this type, initialized from the provided value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public static SubmitTransactionFailure FromObject<TValue>(in TValue value)
            where TValue : struct, IJsonObject<TValue>
        {
            if (value.HasJsonElementBacking)
            {
                return new(value.AsJsonElement);
            }

            return value.ValueKind switch
            {
                JsonValueKind.Object => new(value.AsPropertyBacking()),
                JsonValueKind.Null => Null,
                _ => Undefined,
            };
        }

#if NET8_0_OR_GREATER
        /// <summary>
        /// Gets an instance of the JSON value from the provided value.
        /// </summary>
        /// <typeparam name="TValue">The type of the value.</typeparam>
        /// <param name="value">The value from which to instantiate the instance.</param>
        /// <returns>An instance of this type, initialized from the provided value.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        static SubmitTransactionFailure IJsonValue<SubmitTransactionFailure>.FromArray<TValue>(in TValue value)
        {
            if (value.HasJsonElementBacking)
            {
                return new(value.AsJsonElement);
            }

            return Undefined;
        }
#endif

        /// <summary>
        /// Parses the SubmitTransactionFailure.
        /// </summary>
        /// <param name="source">The source of the JSON string to parse.</param>
        /// <param name="options">The (optional) JsonDocumentOptions.</param>
        public static SubmitTransactionFailure Parse(string source, JsonDocumentOptions options = default)
        {
            using var jsonDocument = JsonDocument.Parse(source, options);
            return new(jsonDocument.RootElement.Clone());
        }

        /// <summary>
        /// Parses the SubmitTransactionFailure.
        /// </summary>
        /// <param name="source">The source of the JSON string to parse.</param>
        /// <param name="options">The (optional) JsonDocumentOptions.</param>
        public static SubmitTransactionFailure Parse(Stream source, JsonDocumentOptions options = default)
        {
            using var jsonDocument = JsonDocument.Parse(source, options);
            return new(jsonDocument.RootElement.Clone());
        }

        /// <summary>
        /// Parses the SubmitTransactionFailure.
        /// </summary>
        /// <param name="source">The source of the JSON string to parse.</param>
        /// <param name="options">The (optional) JsonDocumentOptions.</param>
        public static SubmitTransactionFailure Parse(ReadOnlyMemory<byte> source, JsonDocumentOptions options = default)
        {
            using var jsonDocument = JsonDocument.Parse(source, options);
            return new(jsonDocument.RootElement.Clone());
        }

        /// <summary>
        /// Parses the SubmitTransactionFailure.
        /// </summary>
        /// <param name="source">The source of the JSON string to parse.</param>
        /// <param name="options">The (optional) JsonDocumentOptions.</param>
        public static SubmitTransactionFailure Parse(ReadOnlyMemory<char> source, JsonDocumentOptions options = default)
        {
            using var jsonDocument = JsonDocument.Parse(source, options);
            return new(jsonDocument.RootElement.Clone());
        }

        /// <summary>
        /// Parses the SubmitTransactionFailure.
        /// </summary>
        /// <param name="source">The source of the JSON string to parse.</param>
        /// <param name="options">The (optional) JsonDocumentOptions.</param>
        public static SubmitTransactionFailure Parse(ReadOnlySequence<byte> source, JsonDocumentOptions options = default)
        {
            using var jsonDocument = JsonDocument.Parse(source, options);
            return new(jsonDocument.RootElement.Clone());
        }

        /// <summary>
        /// Parses the SubmitTransactionFailure.
        /// </summary>
        /// <param name="source">The source of the JSON string to parse.</param>
        public static SubmitTransactionFailure ParseValue(string source)
        {
#if NET8_0_OR_GREATER
            return IJsonValue<SubmitTransactionFailure>.ParseValue(source);
#else
            return JsonValueHelpers.ParseValue<SubmitTransactionFailure>(source.AsSpan());
#endif
        }

        /// <summary>
        /// Parses the SubmitTransactionFailure.
        /// </summary>
        /// <param name="source">The source of the JSON string to parse.</param>
        public static SubmitTransactionFailure ParseValue(ReadOnlySpan<char> source)
        {
#if NET8_0_OR_GREATER
            return IJsonValue<SubmitTransactionFailure>.ParseValue(source);
#else
            return JsonValueHelpers.ParseValue<SubmitTransactionFailure>(source);
#endif
        }

        /// <summary>
        /// Parses the SubmitTransactionFailure.
        /// </summary>
        /// <param name="source">The source of the JSON string to parse.</param>
        public static SubmitTransactionFailure ParseValue(ReadOnlySpan<byte> source)
        {
#if NET8_0_OR_GREATER
            return IJsonValue<SubmitTransactionFailure>.ParseValue(source);
#else
            return JsonValueHelpers.ParseValue<SubmitTransactionFailure>(source);
#endif
        }

        /// <summary>
        /// Parses the SubmitTransactionFailure.
        /// </summary>
        /// <param name="source">The source of the JSON string to parse.</param>
        public static SubmitTransactionFailure ParseValue(ref Utf8JsonReader source)
        {
#if NET8_0_OR_GREATER
            return IJsonValue<SubmitTransactionFailure>.ParseValue(ref source);
#else
            return JsonValueHelpers.ParseValue<SubmitTransactionFailure>(ref source);
#endif
        }

        /// <summary>
        /// Gets the value as an instance of the target value.
        /// </summary>
        /// <typeparam name="TTarget">The type of the target.</typeparam>
        /// <returns>An instance of the target type.</returns>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public TTarget As<TTarget>()
            where TTarget : struct, IJsonValue<TTarget>
        {
#if NET8_0_OR_GREATER
            if ((this.backing & Backing.JsonElement) != 0)
            {
                return TTarget.FromJson(this.jsonElementBacking);
            }

            if ((this.backing & Backing.Object) != 0)
            {
                return TTarget.FromObject(this.AsObject);
            }

            if ((this.backing & Backing.Null) != 0)
            {
                return TTarget.Null;
            }

            return TTarget.Undefined;
#else
            return this.As<SubmitTransactionFailure, TTarget>();
#endif
        }

        /// <inheritdoc/>
        public override bool Equals(object? obj)
        {
            return
                (obj is IJsonValue jv && this.Equals(jv.As<SubmitTransactionFailure>())) ||
                (obj is null && this.IsNull());
        }

        /// <inheritdoc/>
        public bool Equals<T>(in T other)
            where T : struct, IJsonValue<T>
        {
            return this.Equals(other.As<SubmitTransactionFailure>());
        }

        /// <summary>
        /// Equality comparison.
        /// </summary>
        /// <param name="other">The other item with which to compare.</param>
        /// <returns><see langword="true"/> if the values were equal.</returns>
        public bool Equals(in SubmitTransactionFailure other)
        {
            JsonValueKind thisKind = this.ValueKind;
            JsonValueKind otherKind = other.ValueKind;
            if (thisKind != otherKind)
            {
                return false;
            }

            if (thisKind == JsonValueKind.Null || thisKind == JsonValueKind.Undefined)
            {
                return true;
            }

            if (thisKind == JsonValueKind.Object)
            {
                JsonObject thisObject = this.AsObject;
                JsonObject otherObject = other.AsObject;
                int count = 0;
                foreach (JsonObjectProperty property in thisObject.EnumerateObject())
                {
                    if (!otherObject.TryGetProperty(property.Name, out JsonAny value) || !property.Value.Equals(value))
                    {
                        return false;
                    }

                    count++;
                }

                int otherCount = 0;
                foreach (JsonObjectProperty otherProperty in otherObject.EnumerateObject())
                {
                    otherCount++;
                    if (otherCount > count)
                    {
                        return false;
                    }
                }

                return count == otherCount;
            }

            return false;
        }

        /// <inheritdoc/>
        public void WriteTo(Utf8JsonWriter writer)
        {
            if ((this.backing & Backing.JsonElement) != 0)
            {
                if (this.jsonElementBacking.ValueKind != JsonValueKind.Undefined)
                {
                    this.jsonElementBacking.WriteTo(writer);
                }

                return;
            }

            if ((this.backing & Backing.Object) != 0)
            {
                JsonValueHelpers.WriteProperties(this.objectBacking, writer);

                return;
            }

            if ((this.backing & Backing.Null) != 0)
            {
                writer.WriteNullValue();

                return;
            }
        }

        /// <inheritdoc/>
        public override int GetHashCode()
        {
            return this.ValueKind switch
            {
                JsonValueKind.Array => JsonValueHelpers.GetArrayHashCode(((IJsonValue)this).AsArray),
                JsonValueKind.Object => JsonValueHelpers.GetObjectHashCode(this),
                JsonValueKind.Number => JsonValueHelpers.GetHashCodeForNumber(((IJsonValue)this).AsNumber),
                JsonValueKind.String => JsonValueHelpers.GetHashCodeForString(((IJsonValue)this).AsString),
                JsonValueKind.True => true.GetHashCode(),
                JsonValueKind.False => false.GetHashCode(),
                JsonValueKind.Null => JsonValueHelpers.NullHashCode,
                _ => JsonValueHelpers.UndefinedHashCode,
            };
        }

        /// <inheritdoc/>
        public override string ToString()
        {
            return this.Serialize();
        }

        /// <summary>
        /// Matches the value against the composed values, and returns the result of calling the provided match function for the first match found.
        /// </summary>
        /// <typeparam name="TIn">The immutable context to pass in to the match function.</typeparam>
        /// <typeparam name="TOut">The result of calling the match function.</typeparam>
        /// <param name="context">The context to pass to the match function.</param>
        /// <param name="matchSubmitTransactionFailureEraMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidSignatories">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingRedeemers">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers"/>.</param>
        /// <param name="matchSubmitTransactionFailureExtraneousRedeemers">Match a <see cref="Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingDatums">Match a <see cref="Generated.Ogmios.SubmitTransactionFailureMissingDatums"/>.</param>
        /// <param name="matchSubmitTransactionFailureExtraneousDatums">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums"/>.</param>
        /// <param name="matchSubmitTransactionFailureScriptIntegrityHashMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureOrphanScriptInputs">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingCostModels">Match a <see cref="Generated.Ogmios.SubmitTransactionFailureMissingCostModels"/>.</param>
        /// <param name="matchSubmitTransactionFailureMalformedScripts">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnknownOutputReference">Match a <see cref="Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference"/>.</param>
        /// <param name="matchSubmitTransactionFailureOutsideOfValidityInterval">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingSignatories">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories"/>.</param>
        /// <param name="matchSubmitTransactionFailureTransactionTooLarge">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge"/>.</param>
        /// <param name="matchSubmitTransactionFailureValueTooLarge">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge"/>.</param>
        /// <param name="matchSubmitTransactionFailureEmptyInputSet">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet"/>.</param>
        /// <param name="matchSubmitTransactionFailureTransactionFeeTooSmall">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall"/>.</param>
        /// <param name="matchSubmitTransactionFailureValueNotConserved">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved"/>.</param>
        /// <param name="matchSubmitTransactionFailureNetworkMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureInsufficientlyFundedOutputs">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs"/>.</param>
        /// <param name="matchSubmitTransactionFailureBootstrapAttributesTooLarge">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge"/>.</param>
        /// <param name="matchSubmitTransactionFailureMintingOrBurningAda">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda"/>.</param>
        /// <param name="matchSubmitTransactionFailureInsufficientCollateral">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingScripts">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts"/>.</param>
        /// <param name="matchSubmitTransactionFailureCollateralLockedByScript">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnforeseeableSlot">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot"/>.</param>
        /// <param name="matchSubmitTransactionFailureTooManyCollateralInputs">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingCollateralInputs">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs"/>.</param>
        /// <param name="matchSubmitTransactionFailureNonAdaCollateral">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral"/>.</param>
        /// <param name="matchSubmitTransactionFailureExecutionUnitsTooLarge">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge"/>.</param>
        /// <param name="matchSubmitTransactionFailureTotalCollateralMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureSpendsMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnauthorizedVotes">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnknownGovernanceProposals">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals"/>.</param>
        /// <param name="matchSubmitTransactionFailureFailingNativeScript">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidProtocolParametersUpdate">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnknownStakePool">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool"/>.</param>
        /// <param name="matchSubmitTransactionFailureIncompleteWithdrawals">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals"/>.</param>
        /// <param name="matchSubmitTransactionFailureRetirementTooLate">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate"/>.</param>
        /// <param name="matchSubmitTransactionFailureStakePoolCostTooLow">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow"/>.</param>
        /// <param name="matchSubmitTransactionFailureMetadataHashTooLarge">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge"/>.</param>
        /// <param name="matchSubmitTransactionFailureCredentialAlreadyRegistered">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnknownCredential">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential"/>.</param>
        /// <param name="matchSubmitTransactionFailureNonEmptyRewardAccount">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidGenesisDelegation">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation"/>.</param>
        /// <param name="matchSubmitTransactionFailureExtraneousScripts">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidMirTransfer">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer"/>.</param>
        /// <param name="matchSubmitTransactionFailureForbiddenWithdrawal">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal"/>.</param>
        /// <param name="matchSubmitTransactionFailureCredentialDepositMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureDRepAlreadyRegistered">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered"/>.</param>
        /// <param name="matchSubmitTransactionFailureDRepNotRegistered">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnknownConstitutionalCommitteeMember">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember"/>.</param>
        /// <param name="matchSubmitTransactionFailureGovernanceProposalDepositMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureConflictingCommitteeUpdate">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidCommitteeUpdate">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate"/>.</param>
        /// <param name="matchSubmitTransactionFailureTreasuryWithdrawalMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingMetadataHash">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidOrMissingPreviousProposals">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals"/>.</param>
        /// <param name="matchSubmitTransactionFailureVotingOnExpiredActions">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions"/>.</param>
        /// <param name="matchSubmitTransactionFailureExecutionBudgetOutOfBounds">Match a <see cref="Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidHardForkVersionBump">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump"/>.</param>
        /// <param name="matchSubmitTransactionFailureConstitutionGuardrailsHashMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureConflictingInputsAndReferences">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnauthorizedGovernanceAction">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction"/>.</param>
        /// <param name="matchSubmitTransactionFailureReferenceScriptsTooLarge">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnknownVoters">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters"/>.</param>
        /// <param name="matchSubmitTransactionFailureEmptyTreasuryWithdrawal">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingMetadata">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnexpectedMempoolError">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnrecognizedCertificateType">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType"/>.</param>
        /// <param name="matchSubmitTransactionFailureMetadataHashMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidMetadata">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata"/>.</param>
        /// <param name="defaultMatch">Match any other value.</param>
        /// <returns>An instance of the value returned by the match function.</returns>
        public TOut Match<TIn, TOut>(
            in TIn context,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch, TIn, TOut> matchSubmitTransactionFailureEraMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories, TIn, TOut> matchSubmitTransactionFailureInvalidSignatories,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers, TIn, TOut> matchSubmitTransactionFailureMissingRedeemers,
            Matcher<Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers, TIn, TOut> matchSubmitTransactionFailureExtraneousRedeemers,
            Matcher<Generated.Ogmios.SubmitTransactionFailureMissingDatums, TIn, TOut> matchSubmitTransactionFailureMissingDatums,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums, TIn, TOut> matchSubmitTransactionFailureExtraneousDatums,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch, TIn, TOut> matchSubmitTransactionFailureScriptIntegrityHashMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs, TIn, TOut> matchSubmitTransactionFailureOrphanScriptInputs,
            Matcher<Generated.Ogmios.SubmitTransactionFailureMissingCostModels, TIn, TOut> matchSubmitTransactionFailureMissingCostModels,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts, TIn, TOut> matchSubmitTransactionFailureMalformedScripts,
            Matcher<Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference, TIn, TOut> matchSubmitTransactionFailureUnknownOutputReference,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval, TIn, TOut> matchSubmitTransactionFailureOutsideOfValidityInterval,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories, TIn, TOut> matchSubmitTransactionFailureMissingSignatories,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge, TIn, TOut> matchSubmitTransactionFailureTransactionTooLarge,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge, TIn, TOut> matchSubmitTransactionFailureValueTooLarge,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet, TIn, TOut> matchSubmitTransactionFailureEmptyInputSet,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall, TIn, TOut> matchSubmitTransactionFailureTransactionFeeTooSmall,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved, TIn, TOut> matchSubmitTransactionFailureValueNotConserved,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch, TIn, TOut> matchSubmitTransactionFailureNetworkMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs, TIn, TOut> matchSubmitTransactionFailureInsufficientlyFundedOutputs,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge, TIn, TOut> matchSubmitTransactionFailureBootstrapAttributesTooLarge,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda, TIn, TOut> matchSubmitTransactionFailureMintingOrBurningAda,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral, TIn, TOut> matchSubmitTransactionFailureInsufficientCollateral,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts, TIn, TOut> matchSubmitTransactionFailureMissingScripts,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript, TIn, TOut> matchSubmitTransactionFailureCollateralLockedByScript,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot, TIn, TOut> matchSubmitTransactionFailureUnforeseeableSlot,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs, TIn, TOut> matchSubmitTransactionFailureTooManyCollateralInputs,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs, TIn, TOut> matchSubmitTransactionFailureMissingCollateralInputs,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral, TIn, TOut> matchSubmitTransactionFailureNonAdaCollateral,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge, TIn, TOut> matchSubmitTransactionFailureExecutionUnitsTooLarge,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch, TIn, TOut> matchSubmitTransactionFailureTotalCollateralMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch, TIn, TOut> matchSubmitTransactionFailureSpendsMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes, TIn, TOut> matchSubmitTransactionFailureUnauthorizedVotes,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals, TIn, TOut> matchSubmitTransactionFailureUnknownGovernanceProposals,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript, TIn, TOut> matchSubmitTransactionFailureFailingNativeScript,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate, TIn, TOut> matchSubmitTransactionFailureInvalidProtocolParametersUpdate,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool, TIn, TOut> matchSubmitTransactionFailureUnknownStakePool,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals, TIn, TOut> matchSubmitTransactionFailureIncompleteWithdrawals,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate, TIn, TOut> matchSubmitTransactionFailureRetirementTooLate,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow, TIn, TOut> matchSubmitTransactionFailureStakePoolCostTooLow,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge, TIn, TOut> matchSubmitTransactionFailureMetadataHashTooLarge,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered, TIn, TOut> matchSubmitTransactionFailureCredentialAlreadyRegistered,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential, TIn, TOut> matchSubmitTransactionFailureUnknownCredential,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount, TIn, TOut> matchSubmitTransactionFailureNonEmptyRewardAccount,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation, TIn, TOut> matchSubmitTransactionFailureInvalidGenesisDelegation,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts, TIn, TOut> matchSubmitTransactionFailureExtraneousScripts,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer, TIn, TOut> matchSubmitTransactionFailureInvalidMirTransfer,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal, TIn, TOut> matchSubmitTransactionFailureForbiddenWithdrawal,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch, TIn, TOut> matchSubmitTransactionFailureCredentialDepositMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered, TIn, TOut> matchSubmitTransactionFailureDRepAlreadyRegistered,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered, TIn, TOut> matchSubmitTransactionFailureDRepNotRegistered,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember, TIn, TOut> matchSubmitTransactionFailureUnknownConstitutionalCommitteeMember,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch, TIn, TOut> matchSubmitTransactionFailureGovernanceProposalDepositMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate, TIn, TOut> matchSubmitTransactionFailureConflictingCommitteeUpdate,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate, TIn, TOut> matchSubmitTransactionFailureInvalidCommitteeUpdate,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch, TIn, TOut> matchSubmitTransactionFailureTreasuryWithdrawalMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash, TIn, TOut> matchSubmitTransactionFailureMissingMetadataHash,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals, TIn, TOut> matchSubmitTransactionFailureInvalidOrMissingPreviousProposals,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions, TIn, TOut> matchSubmitTransactionFailureVotingOnExpiredActions,
            Matcher<Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds, TIn, TOut> matchSubmitTransactionFailureExecutionBudgetOutOfBounds,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump, TIn, TOut> matchSubmitTransactionFailureInvalidHardForkVersionBump,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch, TIn, TOut> matchSubmitTransactionFailureConstitutionGuardrailsHashMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences, TIn, TOut> matchSubmitTransactionFailureConflictingInputsAndReferences,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction, TIn, TOut> matchSubmitTransactionFailureUnauthorizedGovernanceAction,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge, TIn, TOut> matchSubmitTransactionFailureReferenceScriptsTooLarge,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters, TIn, TOut> matchSubmitTransactionFailureUnknownVoters,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal, TIn, TOut> matchSubmitTransactionFailureEmptyTreasuryWithdrawal,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata, TIn, TOut> matchSubmitTransactionFailureMissingMetadata,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError, TIn, TOut> matchSubmitTransactionFailureUnexpectedMempoolError,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType, TIn, TOut> matchSubmitTransactionFailureUnrecognizedCertificateType,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch, TIn, TOut> matchSubmitTransactionFailureMetadataHashMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata, TIn, TOut> matchSubmitTransactionFailureInvalidMetadata,
            Matcher<Generated.Ogmios.SubmitTransactionFailure, TIn, TOut> defaultMatch)
        {
            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch matchSubmitTransactionFailureEraMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch>();
            if (matchSubmitTransactionFailureEraMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureEraMismatch(matchSubmitTransactionFailureEraMismatchValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories matchSubmitTransactionFailureInvalidSignatoriesValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories>();
            if (matchSubmitTransactionFailureInvalidSignatoriesValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidSignatories(matchSubmitTransactionFailureInvalidSignatoriesValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers matchSubmitTransactionFailureMissingRedeemersValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers>();
            if (matchSubmitTransactionFailureMissingRedeemersValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingRedeemers(matchSubmitTransactionFailureMissingRedeemersValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers matchSubmitTransactionFailureExtraneousRedeemersValue = this.As<Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers>();
            if (matchSubmitTransactionFailureExtraneousRedeemersValue.IsValid())
            {
                return matchSubmitTransactionFailureExtraneousRedeemers(matchSubmitTransactionFailureExtraneousRedeemersValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailureMissingDatums matchSubmitTransactionFailureMissingDatumsValue = this.As<Generated.Ogmios.SubmitTransactionFailureMissingDatums>();
            if (matchSubmitTransactionFailureMissingDatumsValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingDatums(matchSubmitTransactionFailureMissingDatumsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums matchSubmitTransactionFailureExtraneousDatumsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums>();
            if (matchSubmitTransactionFailureExtraneousDatumsValue.IsValid())
            {
                return matchSubmitTransactionFailureExtraneousDatums(matchSubmitTransactionFailureExtraneousDatumsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch matchSubmitTransactionFailureScriptIntegrityHashMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch>();
            if (matchSubmitTransactionFailureScriptIntegrityHashMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureScriptIntegrityHashMismatch(matchSubmitTransactionFailureScriptIntegrityHashMismatchValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs matchSubmitTransactionFailureOrphanScriptInputsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs>();
            if (matchSubmitTransactionFailureOrphanScriptInputsValue.IsValid())
            {
                return matchSubmitTransactionFailureOrphanScriptInputs(matchSubmitTransactionFailureOrphanScriptInputsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailureMissingCostModels matchSubmitTransactionFailureMissingCostModelsValue = this.As<Generated.Ogmios.SubmitTransactionFailureMissingCostModels>();
            if (matchSubmitTransactionFailureMissingCostModelsValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingCostModels(matchSubmitTransactionFailureMissingCostModelsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts matchSubmitTransactionFailureMalformedScriptsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts>();
            if (matchSubmitTransactionFailureMalformedScriptsValue.IsValid())
            {
                return matchSubmitTransactionFailureMalformedScripts(matchSubmitTransactionFailureMalformedScriptsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference matchSubmitTransactionFailureUnknownOutputReferenceValue = this.As<Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference>();
            if (matchSubmitTransactionFailureUnknownOutputReferenceValue.IsValid())
            {
                return matchSubmitTransactionFailureUnknownOutputReference(matchSubmitTransactionFailureUnknownOutputReferenceValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval matchSubmitTransactionFailureOutsideOfValidityIntervalValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval>();
            if (matchSubmitTransactionFailureOutsideOfValidityIntervalValue.IsValid())
            {
                return matchSubmitTransactionFailureOutsideOfValidityInterval(matchSubmitTransactionFailureOutsideOfValidityIntervalValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories matchSubmitTransactionFailureMissingSignatoriesValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories>();
            if (matchSubmitTransactionFailureMissingSignatoriesValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingSignatories(matchSubmitTransactionFailureMissingSignatoriesValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge matchSubmitTransactionFailureTransactionTooLargeValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge>();
            if (matchSubmitTransactionFailureTransactionTooLargeValue.IsValid())
            {
                return matchSubmitTransactionFailureTransactionTooLarge(matchSubmitTransactionFailureTransactionTooLargeValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge matchSubmitTransactionFailureValueTooLargeValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge>();
            if (matchSubmitTransactionFailureValueTooLargeValue.IsValid())
            {
                return matchSubmitTransactionFailureValueTooLarge(matchSubmitTransactionFailureValueTooLargeValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet matchSubmitTransactionFailureEmptyInputSetValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet>();
            if (matchSubmitTransactionFailureEmptyInputSetValue.IsValid())
            {
                return matchSubmitTransactionFailureEmptyInputSet(matchSubmitTransactionFailureEmptyInputSetValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall matchSubmitTransactionFailureTransactionFeeTooSmallValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall>();
            if (matchSubmitTransactionFailureTransactionFeeTooSmallValue.IsValid())
            {
                return matchSubmitTransactionFailureTransactionFeeTooSmall(matchSubmitTransactionFailureTransactionFeeTooSmallValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved matchSubmitTransactionFailureValueNotConservedValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved>();
            if (matchSubmitTransactionFailureValueNotConservedValue.IsValid())
            {
                return matchSubmitTransactionFailureValueNotConserved(matchSubmitTransactionFailureValueNotConservedValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch matchSubmitTransactionFailureNetworkMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch>();
            if (matchSubmitTransactionFailureNetworkMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureNetworkMismatch(matchSubmitTransactionFailureNetworkMismatchValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs matchSubmitTransactionFailureInsufficientlyFundedOutputsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs>();
            if (matchSubmitTransactionFailureInsufficientlyFundedOutputsValue.IsValid())
            {
                return matchSubmitTransactionFailureInsufficientlyFundedOutputs(matchSubmitTransactionFailureInsufficientlyFundedOutputsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge matchSubmitTransactionFailureBootstrapAttributesTooLargeValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge>();
            if (matchSubmitTransactionFailureBootstrapAttributesTooLargeValue.IsValid())
            {
                return matchSubmitTransactionFailureBootstrapAttributesTooLarge(matchSubmitTransactionFailureBootstrapAttributesTooLargeValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda matchSubmitTransactionFailureMintingOrBurningAdaValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda>();
            if (matchSubmitTransactionFailureMintingOrBurningAdaValue.IsValid())
            {
                return matchSubmitTransactionFailureMintingOrBurningAda(matchSubmitTransactionFailureMintingOrBurningAdaValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral matchSubmitTransactionFailureInsufficientCollateralValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral>();
            if (matchSubmitTransactionFailureInsufficientCollateralValue.IsValid())
            {
                return matchSubmitTransactionFailureInsufficientCollateral(matchSubmitTransactionFailureInsufficientCollateralValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts matchSubmitTransactionFailureMissingScriptsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts>();
            if (matchSubmitTransactionFailureMissingScriptsValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingScripts(matchSubmitTransactionFailureMissingScriptsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript matchSubmitTransactionFailureCollateralLockedByScriptValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript>();
            if (matchSubmitTransactionFailureCollateralLockedByScriptValue.IsValid())
            {
                return matchSubmitTransactionFailureCollateralLockedByScript(matchSubmitTransactionFailureCollateralLockedByScriptValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot matchSubmitTransactionFailureUnforeseeableSlotValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot>();
            if (matchSubmitTransactionFailureUnforeseeableSlotValue.IsValid())
            {
                return matchSubmitTransactionFailureUnforeseeableSlot(matchSubmitTransactionFailureUnforeseeableSlotValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs matchSubmitTransactionFailureTooManyCollateralInputsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs>();
            if (matchSubmitTransactionFailureTooManyCollateralInputsValue.IsValid())
            {
                return matchSubmitTransactionFailureTooManyCollateralInputs(matchSubmitTransactionFailureTooManyCollateralInputsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs matchSubmitTransactionFailureMissingCollateralInputsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs>();
            if (matchSubmitTransactionFailureMissingCollateralInputsValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingCollateralInputs(matchSubmitTransactionFailureMissingCollateralInputsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral matchSubmitTransactionFailureNonAdaCollateralValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral>();
            if (matchSubmitTransactionFailureNonAdaCollateralValue.IsValid())
            {
                return matchSubmitTransactionFailureNonAdaCollateral(matchSubmitTransactionFailureNonAdaCollateralValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge matchSubmitTransactionFailureExecutionUnitsTooLargeValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge>();
            if (matchSubmitTransactionFailureExecutionUnitsTooLargeValue.IsValid())
            {
                return matchSubmitTransactionFailureExecutionUnitsTooLarge(matchSubmitTransactionFailureExecutionUnitsTooLargeValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch matchSubmitTransactionFailureTotalCollateralMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch>();
            if (matchSubmitTransactionFailureTotalCollateralMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureTotalCollateralMismatch(matchSubmitTransactionFailureTotalCollateralMismatchValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch matchSubmitTransactionFailureSpendsMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch>();
            if (matchSubmitTransactionFailureSpendsMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureSpendsMismatch(matchSubmitTransactionFailureSpendsMismatchValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes matchSubmitTransactionFailureUnauthorizedVotesValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes>();
            if (matchSubmitTransactionFailureUnauthorizedVotesValue.IsValid())
            {
                return matchSubmitTransactionFailureUnauthorizedVotes(matchSubmitTransactionFailureUnauthorizedVotesValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals matchSubmitTransactionFailureUnknownGovernanceProposalsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals>();
            if (matchSubmitTransactionFailureUnknownGovernanceProposalsValue.IsValid())
            {
                return matchSubmitTransactionFailureUnknownGovernanceProposals(matchSubmitTransactionFailureUnknownGovernanceProposalsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript matchSubmitTransactionFailureFailingNativeScriptValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript>();
            if (matchSubmitTransactionFailureFailingNativeScriptValue.IsValid())
            {
                return matchSubmitTransactionFailureFailingNativeScript(matchSubmitTransactionFailureFailingNativeScriptValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate matchSubmitTransactionFailureInvalidProtocolParametersUpdateValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate>();
            if (matchSubmitTransactionFailureInvalidProtocolParametersUpdateValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidProtocolParametersUpdate(matchSubmitTransactionFailureInvalidProtocolParametersUpdateValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool matchSubmitTransactionFailureUnknownStakePoolValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool>();
            if (matchSubmitTransactionFailureUnknownStakePoolValue.IsValid())
            {
                return matchSubmitTransactionFailureUnknownStakePool(matchSubmitTransactionFailureUnknownStakePoolValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals matchSubmitTransactionFailureIncompleteWithdrawalsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals>();
            if (matchSubmitTransactionFailureIncompleteWithdrawalsValue.IsValid())
            {
                return matchSubmitTransactionFailureIncompleteWithdrawals(matchSubmitTransactionFailureIncompleteWithdrawalsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate matchSubmitTransactionFailureRetirementTooLateValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate>();
            if (matchSubmitTransactionFailureRetirementTooLateValue.IsValid())
            {
                return matchSubmitTransactionFailureRetirementTooLate(matchSubmitTransactionFailureRetirementTooLateValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow matchSubmitTransactionFailureStakePoolCostTooLowValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow>();
            if (matchSubmitTransactionFailureStakePoolCostTooLowValue.IsValid())
            {
                return matchSubmitTransactionFailureStakePoolCostTooLow(matchSubmitTransactionFailureStakePoolCostTooLowValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge matchSubmitTransactionFailureMetadataHashTooLargeValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge>();
            if (matchSubmitTransactionFailureMetadataHashTooLargeValue.IsValid())
            {
                return matchSubmitTransactionFailureMetadataHashTooLarge(matchSubmitTransactionFailureMetadataHashTooLargeValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered matchSubmitTransactionFailureCredentialAlreadyRegisteredValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered>();
            if (matchSubmitTransactionFailureCredentialAlreadyRegisteredValue.IsValid())
            {
                return matchSubmitTransactionFailureCredentialAlreadyRegistered(matchSubmitTransactionFailureCredentialAlreadyRegisteredValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential matchSubmitTransactionFailureUnknownCredentialValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential>();
            if (matchSubmitTransactionFailureUnknownCredentialValue.IsValid())
            {
                return matchSubmitTransactionFailureUnknownCredential(matchSubmitTransactionFailureUnknownCredentialValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount matchSubmitTransactionFailureNonEmptyRewardAccountValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount>();
            if (matchSubmitTransactionFailureNonEmptyRewardAccountValue.IsValid())
            {
                return matchSubmitTransactionFailureNonEmptyRewardAccount(matchSubmitTransactionFailureNonEmptyRewardAccountValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation matchSubmitTransactionFailureInvalidGenesisDelegationValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation>();
            if (matchSubmitTransactionFailureInvalidGenesisDelegationValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidGenesisDelegation(matchSubmitTransactionFailureInvalidGenesisDelegationValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts matchSubmitTransactionFailureExtraneousScriptsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts>();
            if (matchSubmitTransactionFailureExtraneousScriptsValue.IsValid())
            {
                return matchSubmitTransactionFailureExtraneousScripts(matchSubmitTransactionFailureExtraneousScriptsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer matchSubmitTransactionFailureInvalidMirTransferValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer>();
            if (matchSubmitTransactionFailureInvalidMirTransferValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidMirTransfer(matchSubmitTransactionFailureInvalidMirTransferValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal matchSubmitTransactionFailureForbiddenWithdrawalValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal>();
            if (matchSubmitTransactionFailureForbiddenWithdrawalValue.IsValid())
            {
                return matchSubmitTransactionFailureForbiddenWithdrawal(matchSubmitTransactionFailureForbiddenWithdrawalValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch matchSubmitTransactionFailureCredentialDepositMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch>();
            if (matchSubmitTransactionFailureCredentialDepositMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureCredentialDepositMismatch(matchSubmitTransactionFailureCredentialDepositMismatchValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered matchSubmitTransactionFailureDRepAlreadyRegisteredValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered>();
            if (matchSubmitTransactionFailureDRepAlreadyRegisteredValue.IsValid())
            {
                return matchSubmitTransactionFailureDRepAlreadyRegistered(matchSubmitTransactionFailureDRepAlreadyRegisteredValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered matchSubmitTransactionFailureDRepNotRegisteredValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered>();
            if (matchSubmitTransactionFailureDRepNotRegisteredValue.IsValid())
            {
                return matchSubmitTransactionFailureDRepNotRegistered(matchSubmitTransactionFailureDRepNotRegisteredValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember matchSubmitTransactionFailureUnknownConstitutionalCommitteeMemberValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember>();
            if (matchSubmitTransactionFailureUnknownConstitutionalCommitteeMemberValue.IsValid())
            {
                return matchSubmitTransactionFailureUnknownConstitutionalCommitteeMember(matchSubmitTransactionFailureUnknownConstitutionalCommitteeMemberValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch matchSubmitTransactionFailureGovernanceProposalDepositMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch>();
            if (matchSubmitTransactionFailureGovernanceProposalDepositMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureGovernanceProposalDepositMismatch(matchSubmitTransactionFailureGovernanceProposalDepositMismatchValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate matchSubmitTransactionFailureConflictingCommitteeUpdateValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate>();
            if (matchSubmitTransactionFailureConflictingCommitteeUpdateValue.IsValid())
            {
                return matchSubmitTransactionFailureConflictingCommitteeUpdate(matchSubmitTransactionFailureConflictingCommitteeUpdateValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate matchSubmitTransactionFailureInvalidCommitteeUpdateValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate>();
            if (matchSubmitTransactionFailureInvalidCommitteeUpdateValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidCommitteeUpdate(matchSubmitTransactionFailureInvalidCommitteeUpdateValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch matchSubmitTransactionFailureTreasuryWithdrawalMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch>();
            if (matchSubmitTransactionFailureTreasuryWithdrawalMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureTreasuryWithdrawalMismatch(matchSubmitTransactionFailureTreasuryWithdrawalMismatchValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash matchSubmitTransactionFailureMissingMetadataHashValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash>();
            if (matchSubmitTransactionFailureMissingMetadataHashValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingMetadataHash(matchSubmitTransactionFailureMissingMetadataHashValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals matchSubmitTransactionFailureInvalidOrMissingPreviousProposalsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals>();
            if (matchSubmitTransactionFailureInvalidOrMissingPreviousProposalsValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidOrMissingPreviousProposals(matchSubmitTransactionFailureInvalidOrMissingPreviousProposalsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions matchSubmitTransactionFailureVotingOnExpiredActionsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions>();
            if (matchSubmitTransactionFailureVotingOnExpiredActionsValue.IsValid())
            {
                return matchSubmitTransactionFailureVotingOnExpiredActions(matchSubmitTransactionFailureVotingOnExpiredActionsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds matchSubmitTransactionFailureExecutionBudgetOutOfBoundsValue = this.As<Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds>();
            if (matchSubmitTransactionFailureExecutionBudgetOutOfBoundsValue.IsValid())
            {
                return matchSubmitTransactionFailureExecutionBudgetOutOfBounds(matchSubmitTransactionFailureExecutionBudgetOutOfBoundsValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump matchSubmitTransactionFailureInvalidHardForkVersionBumpValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump>();
            if (matchSubmitTransactionFailureInvalidHardForkVersionBumpValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidHardForkVersionBump(matchSubmitTransactionFailureInvalidHardForkVersionBumpValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch matchSubmitTransactionFailureConstitutionGuardrailsHashMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch>();
            if (matchSubmitTransactionFailureConstitutionGuardrailsHashMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureConstitutionGuardrailsHashMismatch(matchSubmitTransactionFailureConstitutionGuardrailsHashMismatchValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences matchSubmitTransactionFailureConflictingInputsAndReferencesValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences>();
            if (matchSubmitTransactionFailureConflictingInputsAndReferencesValue.IsValid())
            {
                return matchSubmitTransactionFailureConflictingInputsAndReferences(matchSubmitTransactionFailureConflictingInputsAndReferencesValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction matchSubmitTransactionFailureUnauthorizedGovernanceActionValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction>();
            if (matchSubmitTransactionFailureUnauthorizedGovernanceActionValue.IsValid())
            {
                return matchSubmitTransactionFailureUnauthorizedGovernanceAction(matchSubmitTransactionFailureUnauthorizedGovernanceActionValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge matchSubmitTransactionFailureReferenceScriptsTooLargeValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge>();
            if (matchSubmitTransactionFailureReferenceScriptsTooLargeValue.IsValid())
            {
                return matchSubmitTransactionFailureReferenceScriptsTooLarge(matchSubmitTransactionFailureReferenceScriptsTooLargeValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters matchSubmitTransactionFailureUnknownVotersValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters>();
            if (matchSubmitTransactionFailureUnknownVotersValue.IsValid())
            {
                return matchSubmitTransactionFailureUnknownVoters(matchSubmitTransactionFailureUnknownVotersValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal matchSubmitTransactionFailureEmptyTreasuryWithdrawalValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal>();
            if (matchSubmitTransactionFailureEmptyTreasuryWithdrawalValue.IsValid())
            {
                return matchSubmitTransactionFailureEmptyTreasuryWithdrawal(matchSubmitTransactionFailureEmptyTreasuryWithdrawalValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata matchSubmitTransactionFailureMissingMetadataValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata>();
            if (matchSubmitTransactionFailureMissingMetadataValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingMetadata(matchSubmitTransactionFailureMissingMetadataValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError matchSubmitTransactionFailureUnexpectedMempoolErrorValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError>();
            if (matchSubmitTransactionFailureUnexpectedMempoolErrorValue.IsValid())
            {
                return matchSubmitTransactionFailureUnexpectedMempoolError(matchSubmitTransactionFailureUnexpectedMempoolErrorValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType matchSubmitTransactionFailureUnrecognizedCertificateTypeValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType>();
            if (matchSubmitTransactionFailureUnrecognizedCertificateTypeValue.IsValid())
            {
                return matchSubmitTransactionFailureUnrecognizedCertificateType(matchSubmitTransactionFailureUnrecognizedCertificateTypeValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch matchSubmitTransactionFailureMetadataHashMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch>();
            if (matchSubmitTransactionFailureMetadataHashMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureMetadataHashMismatch(matchSubmitTransactionFailureMetadataHashMismatchValue, context);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata matchSubmitTransactionFailureInvalidMetadataValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata>();
            if (matchSubmitTransactionFailureInvalidMetadataValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidMetadata(matchSubmitTransactionFailureInvalidMetadataValue, context);
            }

            return defaultMatch(this, context);
        }

        /// <summary>
        /// Matches the value against the composed values, and returns the result of calling the provided match function for the first match found.
        /// </summary>
        /// <typeparam name="TOut">The result of calling the match function.</typeparam>
        /// <param name="matchSubmitTransactionFailureEraMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidSignatories">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingRedeemers">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers"/>.</param>
        /// <param name="matchSubmitTransactionFailureExtraneousRedeemers">Match a <see cref="Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingDatums">Match a <see cref="Generated.Ogmios.SubmitTransactionFailureMissingDatums"/>.</param>
        /// <param name="matchSubmitTransactionFailureExtraneousDatums">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums"/>.</param>
        /// <param name="matchSubmitTransactionFailureScriptIntegrityHashMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureOrphanScriptInputs">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingCostModels">Match a <see cref="Generated.Ogmios.SubmitTransactionFailureMissingCostModels"/>.</param>
        /// <param name="matchSubmitTransactionFailureMalformedScripts">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnknownOutputReference">Match a <see cref="Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference"/>.</param>
        /// <param name="matchSubmitTransactionFailureOutsideOfValidityInterval">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingSignatories">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories"/>.</param>
        /// <param name="matchSubmitTransactionFailureTransactionTooLarge">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge"/>.</param>
        /// <param name="matchSubmitTransactionFailureValueTooLarge">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge"/>.</param>
        /// <param name="matchSubmitTransactionFailureEmptyInputSet">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet"/>.</param>
        /// <param name="matchSubmitTransactionFailureTransactionFeeTooSmall">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall"/>.</param>
        /// <param name="matchSubmitTransactionFailureValueNotConserved">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved"/>.</param>
        /// <param name="matchSubmitTransactionFailureNetworkMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureInsufficientlyFundedOutputs">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs"/>.</param>
        /// <param name="matchSubmitTransactionFailureBootstrapAttributesTooLarge">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge"/>.</param>
        /// <param name="matchSubmitTransactionFailureMintingOrBurningAda">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda"/>.</param>
        /// <param name="matchSubmitTransactionFailureInsufficientCollateral">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingScripts">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts"/>.</param>
        /// <param name="matchSubmitTransactionFailureCollateralLockedByScript">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnforeseeableSlot">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot"/>.</param>
        /// <param name="matchSubmitTransactionFailureTooManyCollateralInputs">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingCollateralInputs">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs"/>.</param>
        /// <param name="matchSubmitTransactionFailureNonAdaCollateral">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral"/>.</param>
        /// <param name="matchSubmitTransactionFailureExecutionUnitsTooLarge">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge"/>.</param>
        /// <param name="matchSubmitTransactionFailureTotalCollateralMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureSpendsMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnauthorizedVotes">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnknownGovernanceProposals">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals"/>.</param>
        /// <param name="matchSubmitTransactionFailureFailingNativeScript">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidProtocolParametersUpdate">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnknownStakePool">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool"/>.</param>
        /// <param name="matchSubmitTransactionFailureIncompleteWithdrawals">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals"/>.</param>
        /// <param name="matchSubmitTransactionFailureRetirementTooLate">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate"/>.</param>
        /// <param name="matchSubmitTransactionFailureStakePoolCostTooLow">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow"/>.</param>
        /// <param name="matchSubmitTransactionFailureMetadataHashTooLarge">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge"/>.</param>
        /// <param name="matchSubmitTransactionFailureCredentialAlreadyRegistered">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnknownCredential">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential"/>.</param>
        /// <param name="matchSubmitTransactionFailureNonEmptyRewardAccount">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidGenesisDelegation">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation"/>.</param>
        /// <param name="matchSubmitTransactionFailureExtraneousScripts">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidMirTransfer">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer"/>.</param>
        /// <param name="matchSubmitTransactionFailureForbiddenWithdrawal">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal"/>.</param>
        /// <param name="matchSubmitTransactionFailureCredentialDepositMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureDRepAlreadyRegistered">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered"/>.</param>
        /// <param name="matchSubmitTransactionFailureDRepNotRegistered">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnknownConstitutionalCommitteeMember">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember"/>.</param>
        /// <param name="matchSubmitTransactionFailureGovernanceProposalDepositMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureConflictingCommitteeUpdate">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidCommitteeUpdate">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate"/>.</param>
        /// <param name="matchSubmitTransactionFailureTreasuryWithdrawalMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingMetadataHash">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidOrMissingPreviousProposals">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals"/>.</param>
        /// <param name="matchSubmitTransactionFailureVotingOnExpiredActions">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions"/>.</param>
        /// <param name="matchSubmitTransactionFailureExecutionBudgetOutOfBounds">Match a <see cref="Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidHardForkVersionBump">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump"/>.</param>
        /// <param name="matchSubmitTransactionFailureConstitutionGuardrailsHashMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureConflictingInputsAndReferences">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnauthorizedGovernanceAction">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction"/>.</param>
        /// <param name="matchSubmitTransactionFailureReferenceScriptsTooLarge">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnknownVoters">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters"/>.</param>
        /// <param name="matchSubmitTransactionFailureEmptyTreasuryWithdrawal">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal"/>.</param>
        /// <param name="matchSubmitTransactionFailureMissingMetadata">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnexpectedMempoolError">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError"/>.</param>
        /// <param name="matchSubmitTransactionFailureUnrecognizedCertificateType">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType"/>.</param>
        /// <param name="matchSubmitTransactionFailureMetadataHashMismatch">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch"/>.</param>
        /// <param name="matchSubmitTransactionFailureInvalidMetadata">Match a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata"/>.</param>
        /// <param name="defaultMatch">Match any other value.</param>
        /// <returns>An instance of the value returned by the match function.</returns>
        public TOut Match<TOut>(
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch, TOut> matchSubmitTransactionFailureEraMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories, TOut> matchSubmitTransactionFailureInvalidSignatories,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers, TOut> matchSubmitTransactionFailureMissingRedeemers,
            Matcher<Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers, TOut> matchSubmitTransactionFailureExtraneousRedeemers,
            Matcher<Generated.Ogmios.SubmitTransactionFailureMissingDatums, TOut> matchSubmitTransactionFailureMissingDatums,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums, TOut> matchSubmitTransactionFailureExtraneousDatums,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch, TOut> matchSubmitTransactionFailureScriptIntegrityHashMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs, TOut> matchSubmitTransactionFailureOrphanScriptInputs,
            Matcher<Generated.Ogmios.SubmitTransactionFailureMissingCostModels, TOut> matchSubmitTransactionFailureMissingCostModels,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts, TOut> matchSubmitTransactionFailureMalformedScripts,
            Matcher<Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference, TOut> matchSubmitTransactionFailureUnknownOutputReference,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval, TOut> matchSubmitTransactionFailureOutsideOfValidityInterval,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories, TOut> matchSubmitTransactionFailureMissingSignatories,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge, TOut> matchSubmitTransactionFailureTransactionTooLarge,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge, TOut> matchSubmitTransactionFailureValueTooLarge,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet, TOut> matchSubmitTransactionFailureEmptyInputSet,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall, TOut> matchSubmitTransactionFailureTransactionFeeTooSmall,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved, TOut> matchSubmitTransactionFailureValueNotConserved,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch, TOut> matchSubmitTransactionFailureNetworkMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs, TOut> matchSubmitTransactionFailureInsufficientlyFundedOutputs,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge, TOut> matchSubmitTransactionFailureBootstrapAttributesTooLarge,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda, TOut> matchSubmitTransactionFailureMintingOrBurningAda,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral, TOut> matchSubmitTransactionFailureInsufficientCollateral,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts, TOut> matchSubmitTransactionFailureMissingScripts,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript, TOut> matchSubmitTransactionFailureCollateralLockedByScript,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot, TOut> matchSubmitTransactionFailureUnforeseeableSlot,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs, TOut> matchSubmitTransactionFailureTooManyCollateralInputs,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs, TOut> matchSubmitTransactionFailureMissingCollateralInputs,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral, TOut> matchSubmitTransactionFailureNonAdaCollateral,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge, TOut> matchSubmitTransactionFailureExecutionUnitsTooLarge,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch, TOut> matchSubmitTransactionFailureTotalCollateralMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch, TOut> matchSubmitTransactionFailureSpendsMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes, TOut> matchSubmitTransactionFailureUnauthorizedVotes,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals, TOut> matchSubmitTransactionFailureUnknownGovernanceProposals,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript, TOut> matchSubmitTransactionFailureFailingNativeScript,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate, TOut> matchSubmitTransactionFailureInvalidProtocolParametersUpdate,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool, TOut> matchSubmitTransactionFailureUnknownStakePool,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals, TOut> matchSubmitTransactionFailureIncompleteWithdrawals,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate, TOut> matchSubmitTransactionFailureRetirementTooLate,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow, TOut> matchSubmitTransactionFailureStakePoolCostTooLow,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge, TOut> matchSubmitTransactionFailureMetadataHashTooLarge,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered, TOut> matchSubmitTransactionFailureCredentialAlreadyRegistered,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential, TOut> matchSubmitTransactionFailureUnknownCredential,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount, TOut> matchSubmitTransactionFailureNonEmptyRewardAccount,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation, TOut> matchSubmitTransactionFailureInvalidGenesisDelegation,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts, TOut> matchSubmitTransactionFailureExtraneousScripts,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer, TOut> matchSubmitTransactionFailureInvalidMirTransfer,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal, TOut> matchSubmitTransactionFailureForbiddenWithdrawal,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch, TOut> matchSubmitTransactionFailureCredentialDepositMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered, TOut> matchSubmitTransactionFailureDRepAlreadyRegistered,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered, TOut> matchSubmitTransactionFailureDRepNotRegistered,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember, TOut> matchSubmitTransactionFailureUnknownConstitutionalCommitteeMember,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch, TOut> matchSubmitTransactionFailureGovernanceProposalDepositMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate, TOut> matchSubmitTransactionFailureConflictingCommitteeUpdate,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate, TOut> matchSubmitTransactionFailureInvalidCommitteeUpdate,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch, TOut> matchSubmitTransactionFailureTreasuryWithdrawalMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash, TOut> matchSubmitTransactionFailureMissingMetadataHash,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals, TOut> matchSubmitTransactionFailureInvalidOrMissingPreviousProposals,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions, TOut> matchSubmitTransactionFailureVotingOnExpiredActions,
            Matcher<Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds, TOut> matchSubmitTransactionFailureExecutionBudgetOutOfBounds,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump, TOut> matchSubmitTransactionFailureInvalidHardForkVersionBump,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch, TOut> matchSubmitTransactionFailureConstitutionGuardrailsHashMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences, TOut> matchSubmitTransactionFailureConflictingInputsAndReferences,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction, TOut> matchSubmitTransactionFailureUnauthorizedGovernanceAction,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge, TOut> matchSubmitTransactionFailureReferenceScriptsTooLarge,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters, TOut> matchSubmitTransactionFailureUnknownVoters,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal, TOut> matchSubmitTransactionFailureEmptyTreasuryWithdrawal,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata, TOut> matchSubmitTransactionFailureMissingMetadata,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError, TOut> matchSubmitTransactionFailureUnexpectedMempoolError,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType, TOut> matchSubmitTransactionFailureUnrecognizedCertificateType,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch, TOut> matchSubmitTransactionFailureMetadataHashMismatch,
            Matcher<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata, TOut> matchSubmitTransactionFailureInvalidMetadata,
            Matcher<Generated.Ogmios.SubmitTransactionFailure, TOut> defaultMatch)
        {
            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch matchSubmitTransactionFailureEraMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch>();
            if (matchSubmitTransactionFailureEraMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureEraMismatch(matchSubmitTransactionFailureEraMismatchValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories matchSubmitTransactionFailureInvalidSignatoriesValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories>();
            if (matchSubmitTransactionFailureInvalidSignatoriesValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidSignatories(matchSubmitTransactionFailureInvalidSignatoriesValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers matchSubmitTransactionFailureMissingRedeemersValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers>();
            if (matchSubmitTransactionFailureMissingRedeemersValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingRedeemers(matchSubmitTransactionFailureMissingRedeemersValue);
            }

            Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers matchSubmitTransactionFailureExtraneousRedeemersValue = this.As<Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers>();
            if (matchSubmitTransactionFailureExtraneousRedeemersValue.IsValid())
            {
                return matchSubmitTransactionFailureExtraneousRedeemers(matchSubmitTransactionFailureExtraneousRedeemersValue);
            }

            Generated.Ogmios.SubmitTransactionFailureMissingDatums matchSubmitTransactionFailureMissingDatumsValue = this.As<Generated.Ogmios.SubmitTransactionFailureMissingDatums>();
            if (matchSubmitTransactionFailureMissingDatumsValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingDatums(matchSubmitTransactionFailureMissingDatumsValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums matchSubmitTransactionFailureExtraneousDatumsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums>();
            if (matchSubmitTransactionFailureExtraneousDatumsValue.IsValid())
            {
                return matchSubmitTransactionFailureExtraneousDatums(matchSubmitTransactionFailureExtraneousDatumsValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch matchSubmitTransactionFailureScriptIntegrityHashMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch>();
            if (matchSubmitTransactionFailureScriptIntegrityHashMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureScriptIntegrityHashMismatch(matchSubmitTransactionFailureScriptIntegrityHashMismatchValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs matchSubmitTransactionFailureOrphanScriptInputsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs>();
            if (matchSubmitTransactionFailureOrphanScriptInputsValue.IsValid())
            {
                return matchSubmitTransactionFailureOrphanScriptInputs(matchSubmitTransactionFailureOrphanScriptInputsValue);
            }

            Generated.Ogmios.SubmitTransactionFailureMissingCostModels matchSubmitTransactionFailureMissingCostModelsValue = this.As<Generated.Ogmios.SubmitTransactionFailureMissingCostModels>();
            if (matchSubmitTransactionFailureMissingCostModelsValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingCostModels(matchSubmitTransactionFailureMissingCostModelsValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts matchSubmitTransactionFailureMalformedScriptsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts>();
            if (matchSubmitTransactionFailureMalformedScriptsValue.IsValid())
            {
                return matchSubmitTransactionFailureMalformedScripts(matchSubmitTransactionFailureMalformedScriptsValue);
            }

            Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference matchSubmitTransactionFailureUnknownOutputReferenceValue = this.As<Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference>();
            if (matchSubmitTransactionFailureUnknownOutputReferenceValue.IsValid())
            {
                return matchSubmitTransactionFailureUnknownOutputReference(matchSubmitTransactionFailureUnknownOutputReferenceValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval matchSubmitTransactionFailureOutsideOfValidityIntervalValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval>();
            if (matchSubmitTransactionFailureOutsideOfValidityIntervalValue.IsValid())
            {
                return matchSubmitTransactionFailureOutsideOfValidityInterval(matchSubmitTransactionFailureOutsideOfValidityIntervalValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories matchSubmitTransactionFailureMissingSignatoriesValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories>();
            if (matchSubmitTransactionFailureMissingSignatoriesValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingSignatories(matchSubmitTransactionFailureMissingSignatoriesValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge matchSubmitTransactionFailureTransactionTooLargeValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge>();
            if (matchSubmitTransactionFailureTransactionTooLargeValue.IsValid())
            {
                return matchSubmitTransactionFailureTransactionTooLarge(matchSubmitTransactionFailureTransactionTooLargeValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge matchSubmitTransactionFailureValueTooLargeValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge>();
            if (matchSubmitTransactionFailureValueTooLargeValue.IsValid())
            {
                return matchSubmitTransactionFailureValueTooLarge(matchSubmitTransactionFailureValueTooLargeValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet matchSubmitTransactionFailureEmptyInputSetValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet>();
            if (matchSubmitTransactionFailureEmptyInputSetValue.IsValid())
            {
                return matchSubmitTransactionFailureEmptyInputSet(matchSubmitTransactionFailureEmptyInputSetValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall matchSubmitTransactionFailureTransactionFeeTooSmallValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall>();
            if (matchSubmitTransactionFailureTransactionFeeTooSmallValue.IsValid())
            {
                return matchSubmitTransactionFailureTransactionFeeTooSmall(matchSubmitTransactionFailureTransactionFeeTooSmallValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved matchSubmitTransactionFailureValueNotConservedValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved>();
            if (matchSubmitTransactionFailureValueNotConservedValue.IsValid())
            {
                return matchSubmitTransactionFailureValueNotConserved(matchSubmitTransactionFailureValueNotConservedValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch matchSubmitTransactionFailureNetworkMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch>();
            if (matchSubmitTransactionFailureNetworkMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureNetworkMismatch(matchSubmitTransactionFailureNetworkMismatchValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs matchSubmitTransactionFailureInsufficientlyFundedOutputsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs>();
            if (matchSubmitTransactionFailureInsufficientlyFundedOutputsValue.IsValid())
            {
                return matchSubmitTransactionFailureInsufficientlyFundedOutputs(matchSubmitTransactionFailureInsufficientlyFundedOutputsValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge matchSubmitTransactionFailureBootstrapAttributesTooLargeValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge>();
            if (matchSubmitTransactionFailureBootstrapAttributesTooLargeValue.IsValid())
            {
                return matchSubmitTransactionFailureBootstrapAttributesTooLarge(matchSubmitTransactionFailureBootstrapAttributesTooLargeValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda matchSubmitTransactionFailureMintingOrBurningAdaValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda>();
            if (matchSubmitTransactionFailureMintingOrBurningAdaValue.IsValid())
            {
                return matchSubmitTransactionFailureMintingOrBurningAda(matchSubmitTransactionFailureMintingOrBurningAdaValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral matchSubmitTransactionFailureInsufficientCollateralValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral>();
            if (matchSubmitTransactionFailureInsufficientCollateralValue.IsValid())
            {
                return matchSubmitTransactionFailureInsufficientCollateral(matchSubmitTransactionFailureInsufficientCollateralValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts matchSubmitTransactionFailureMissingScriptsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts>();
            if (matchSubmitTransactionFailureMissingScriptsValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingScripts(matchSubmitTransactionFailureMissingScriptsValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript matchSubmitTransactionFailureCollateralLockedByScriptValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript>();
            if (matchSubmitTransactionFailureCollateralLockedByScriptValue.IsValid())
            {
                return matchSubmitTransactionFailureCollateralLockedByScript(matchSubmitTransactionFailureCollateralLockedByScriptValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot matchSubmitTransactionFailureUnforeseeableSlotValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot>();
            if (matchSubmitTransactionFailureUnforeseeableSlotValue.IsValid())
            {
                return matchSubmitTransactionFailureUnforeseeableSlot(matchSubmitTransactionFailureUnforeseeableSlotValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs matchSubmitTransactionFailureTooManyCollateralInputsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs>();
            if (matchSubmitTransactionFailureTooManyCollateralInputsValue.IsValid())
            {
                return matchSubmitTransactionFailureTooManyCollateralInputs(matchSubmitTransactionFailureTooManyCollateralInputsValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs matchSubmitTransactionFailureMissingCollateralInputsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs>();
            if (matchSubmitTransactionFailureMissingCollateralInputsValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingCollateralInputs(matchSubmitTransactionFailureMissingCollateralInputsValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral matchSubmitTransactionFailureNonAdaCollateralValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral>();
            if (matchSubmitTransactionFailureNonAdaCollateralValue.IsValid())
            {
                return matchSubmitTransactionFailureNonAdaCollateral(matchSubmitTransactionFailureNonAdaCollateralValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge matchSubmitTransactionFailureExecutionUnitsTooLargeValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge>();
            if (matchSubmitTransactionFailureExecutionUnitsTooLargeValue.IsValid())
            {
                return matchSubmitTransactionFailureExecutionUnitsTooLarge(matchSubmitTransactionFailureExecutionUnitsTooLargeValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch matchSubmitTransactionFailureTotalCollateralMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch>();
            if (matchSubmitTransactionFailureTotalCollateralMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureTotalCollateralMismatch(matchSubmitTransactionFailureTotalCollateralMismatchValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch matchSubmitTransactionFailureSpendsMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch>();
            if (matchSubmitTransactionFailureSpendsMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureSpendsMismatch(matchSubmitTransactionFailureSpendsMismatchValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes matchSubmitTransactionFailureUnauthorizedVotesValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes>();
            if (matchSubmitTransactionFailureUnauthorizedVotesValue.IsValid())
            {
                return matchSubmitTransactionFailureUnauthorizedVotes(matchSubmitTransactionFailureUnauthorizedVotesValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals matchSubmitTransactionFailureUnknownGovernanceProposalsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals>();
            if (matchSubmitTransactionFailureUnknownGovernanceProposalsValue.IsValid())
            {
                return matchSubmitTransactionFailureUnknownGovernanceProposals(matchSubmitTransactionFailureUnknownGovernanceProposalsValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript matchSubmitTransactionFailureFailingNativeScriptValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript>();
            if (matchSubmitTransactionFailureFailingNativeScriptValue.IsValid())
            {
                return matchSubmitTransactionFailureFailingNativeScript(matchSubmitTransactionFailureFailingNativeScriptValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate matchSubmitTransactionFailureInvalidProtocolParametersUpdateValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate>();
            if (matchSubmitTransactionFailureInvalidProtocolParametersUpdateValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidProtocolParametersUpdate(matchSubmitTransactionFailureInvalidProtocolParametersUpdateValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool matchSubmitTransactionFailureUnknownStakePoolValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool>();
            if (matchSubmitTransactionFailureUnknownStakePoolValue.IsValid())
            {
                return matchSubmitTransactionFailureUnknownStakePool(matchSubmitTransactionFailureUnknownStakePoolValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals matchSubmitTransactionFailureIncompleteWithdrawalsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals>();
            if (matchSubmitTransactionFailureIncompleteWithdrawalsValue.IsValid())
            {
                return matchSubmitTransactionFailureIncompleteWithdrawals(matchSubmitTransactionFailureIncompleteWithdrawalsValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate matchSubmitTransactionFailureRetirementTooLateValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate>();
            if (matchSubmitTransactionFailureRetirementTooLateValue.IsValid())
            {
                return matchSubmitTransactionFailureRetirementTooLate(matchSubmitTransactionFailureRetirementTooLateValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow matchSubmitTransactionFailureStakePoolCostTooLowValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow>();
            if (matchSubmitTransactionFailureStakePoolCostTooLowValue.IsValid())
            {
                return matchSubmitTransactionFailureStakePoolCostTooLow(matchSubmitTransactionFailureStakePoolCostTooLowValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge matchSubmitTransactionFailureMetadataHashTooLargeValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge>();
            if (matchSubmitTransactionFailureMetadataHashTooLargeValue.IsValid())
            {
                return matchSubmitTransactionFailureMetadataHashTooLarge(matchSubmitTransactionFailureMetadataHashTooLargeValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered matchSubmitTransactionFailureCredentialAlreadyRegisteredValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered>();
            if (matchSubmitTransactionFailureCredentialAlreadyRegisteredValue.IsValid())
            {
                return matchSubmitTransactionFailureCredentialAlreadyRegistered(matchSubmitTransactionFailureCredentialAlreadyRegisteredValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential matchSubmitTransactionFailureUnknownCredentialValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential>();
            if (matchSubmitTransactionFailureUnknownCredentialValue.IsValid())
            {
                return matchSubmitTransactionFailureUnknownCredential(matchSubmitTransactionFailureUnknownCredentialValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount matchSubmitTransactionFailureNonEmptyRewardAccountValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount>();
            if (matchSubmitTransactionFailureNonEmptyRewardAccountValue.IsValid())
            {
                return matchSubmitTransactionFailureNonEmptyRewardAccount(matchSubmitTransactionFailureNonEmptyRewardAccountValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation matchSubmitTransactionFailureInvalidGenesisDelegationValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation>();
            if (matchSubmitTransactionFailureInvalidGenesisDelegationValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidGenesisDelegation(matchSubmitTransactionFailureInvalidGenesisDelegationValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts matchSubmitTransactionFailureExtraneousScriptsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts>();
            if (matchSubmitTransactionFailureExtraneousScriptsValue.IsValid())
            {
                return matchSubmitTransactionFailureExtraneousScripts(matchSubmitTransactionFailureExtraneousScriptsValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer matchSubmitTransactionFailureInvalidMirTransferValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer>();
            if (matchSubmitTransactionFailureInvalidMirTransferValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidMirTransfer(matchSubmitTransactionFailureInvalidMirTransferValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal matchSubmitTransactionFailureForbiddenWithdrawalValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal>();
            if (matchSubmitTransactionFailureForbiddenWithdrawalValue.IsValid())
            {
                return matchSubmitTransactionFailureForbiddenWithdrawal(matchSubmitTransactionFailureForbiddenWithdrawalValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch matchSubmitTransactionFailureCredentialDepositMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch>();
            if (matchSubmitTransactionFailureCredentialDepositMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureCredentialDepositMismatch(matchSubmitTransactionFailureCredentialDepositMismatchValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered matchSubmitTransactionFailureDRepAlreadyRegisteredValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered>();
            if (matchSubmitTransactionFailureDRepAlreadyRegisteredValue.IsValid())
            {
                return matchSubmitTransactionFailureDRepAlreadyRegistered(matchSubmitTransactionFailureDRepAlreadyRegisteredValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered matchSubmitTransactionFailureDRepNotRegisteredValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered>();
            if (matchSubmitTransactionFailureDRepNotRegisteredValue.IsValid())
            {
                return matchSubmitTransactionFailureDRepNotRegistered(matchSubmitTransactionFailureDRepNotRegisteredValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember matchSubmitTransactionFailureUnknownConstitutionalCommitteeMemberValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember>();
            if (matchSubmitTransactionFailureUnknownConstitutionalCommitteeMemberValue.IsValid())
            {
                return matchSubmitTransactionFailureUnknownConstitutionalCommitteeMember(matchSubmitTransactionFailureUnknownConstitutionalCommitteeMemberValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch matchSubmitTransactionFailureGovernanceProposalDepositMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch>();
            if (matchSubmitTransactionFailureGovernanceProposalDepositMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureGovernanceProposalDepositMismatch(matchSubmitTransactionFailureGovernanceProposalDepositMismatchValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate matchSubmitTransactionFailureConflictingCommitteeUpdateValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate>();
            if (matchSubmitTransactionFailureConflictingCommitteeUpdateValue.IsValid())
            {
                return matchSubmitTransactionFailureConflictingCommitteeUpdate(matchSubmitTransactionFailureConflictingCommitteeUpdateValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate matchSubmitTransactionFailureInvalidCommitteeUpdateValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate>();
            if (matchSubmitTransactionFailureInvalidCommitteeUpdateValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidCommitteeUpdate(matchSubmitTransactionFailureInvalidCommitteeUpdateValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch matchSubmitTransactionFailureTreasuryWithdrawalMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch>();
            if (matchSubmitTransactionFailureTreasuryWithdrawalMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureTreasuryWithdrawalMismatch(matchSubmitTransactionFailureTreasuryWithdrawalMismatchValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash matchSubmitTransactionFailureMissingMetadataHashValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash>();
            if (matchSubmitTransactionFailureMissingMetadataHashValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingMetadataHash(matchSubmitTransactionFailureMissingMetadataHashValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals matchSubmitTransactionFailureInvalidOrMissingPreviousProposalsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals>();
            if (matchSubmitTransactionFailureInvalidOrMissingPreviousProposalsValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidOrMissingPreviousProposals(matchSubmitTransactionFailureInvalidOrMissingPreviousProposalsValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions matchSubmitTransactionFailureVotingOnExpiredActionsValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions>();
            if (matchSubmitTransactionFailureVotingOnExpiredActionsValue.IsValid())
            {
                return matchSubmitTransactionFailureVotingOnExpiredActions(matchSubmitTransactionFailureVotingOnExpiredActionsValue);
            }

            Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds matchSubmitTransactionFailureExecutionBudgetOutOfBoundsValue = this.As<Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds>();
            if (matchSubmitTransactionFailureExecutionBudgetOutOfBoundsValue.IsValid())
            {
                return matchSubmitTransactionFailureExecutionBudgetOutOfBounds(matchSubmitTransactionFailureExecutionBudgetOutOfBoundsValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump matchSubmitTransactionFailureInvalidHardForkVersionBumpValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump>();
            if (matchSubmitTransactionFailureInvalidHardForkVersionBumpValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidHardForkVersionBump(matchSubmitTransactionFailureInvalidHardForkVersionBumpValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch matchSubmitTransactionFailureConstitutionGuardrailsHashMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch>();
            if (matchSubmitTransactionFailureConstitutionGuardrailsHashMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureConstitutionGuardrailsHashMismatch(matchSubmitTransactionFailureConstitutionGuardrailsHashMismatchValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences matchSubmitTransactionFailureConflictingInputsAndReferencesValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences>();
            if (matchSubmitTransactionFailureConflictingInputsAndReferencesValue.IsValid())
            {
                return matchSubmitTransactionFailureConflictingInputsAndReferences(matchSubmitTransactionFailureConflictingInputsAndReferencesValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction matchSubmitTransactionFailureUnauthorizedGovernanceActionValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction>();
            if (matchSubmitTransactionFailureUnauthorizedGovernanceActionValue.IsValid())
            {
                return matchSubmitTransactionFailureUnauthorizedGovernanceAction(matchSubmitTransactionFailureUnauthorizedGovernanceActionValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge matchSubmitTransactionFailureReferenceScriptsTooLargeValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge>();
            if (matchSubmitTransactionFailureReferenceScriptsTooLargeValue.IsValid())
            {
                return matchSubmitTransactionFailureReferenceScriptsTooLarge(matchSubmitTransactionFailureReferenceScriptsTooLargeValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters matchSubmitTransactionFailureUnknownVotersValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters>();
            if (matchSubmitTransactionFailureUnknownVotersValue.IsValid())
            {
                return matchSubmitTransactionFailureUnknownVoters(matchSubmitTransactionFailureUnknownVotersValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal matchSubmitTransactionFailureEmptyTreasuryWithdrawalValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal>();
            if (matchSubmitTransactionFailureEmptyTreasuryWithdrawalValue.IsValid())
            {
                return matchSubmitTransactionFailureEmptyTreasuryWithdrawal(matchSubmitTransactionFailureEmptyTreasuryWithdrawalValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata matchSubmitTransactionFailureMissingMetadataValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata>();
            if (matchSubmitTransactionFailureMissingMetadataValue.IsValid())
            {
                return matchSubmitTransactionFailureMissingMetadata(matchSubmitTransactionFailureMissingMetadataValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError matchSubmitTransactionFailureUnexpectedMempoolErrorValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError>();
            if (matchSubmitTransactionFailureUnexpectedMempoolErrorValue.IsValid())
            {
                return matchSubmitTransactionFailureUnexpectedMempoolError(matchSubmitTransactionFailureUnexpectedMempoolErrorValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType matchSubmitTransactionFailureUnrecognizedCertificateTypeValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType>();
            if (matchSubmitTransactionFailureUnrecognizedCertificateTypeValue.IsValid())
            {
                return matchSubmitTransactionFailureUnrecognizedCertificateType(matchSubmitTransactionFailureUnrecognizedCertificateTypeValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch matchSubmitTransactionFailureMetadataHashMismatchValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch>();
            if (matchSubmitTransactionFailureMetadataHashMismatchValue.IsValid())
            {
                return matchSubmitTransactionFailureMetadataHashMismatch(matchSubmitTransactionFailureMetadataHashMismatchValue);
            }

            Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata matchSubmitTransactionFailureInvalidMetadataValue = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata>();
            if (matchSubmitTransactionFailureInvalidMetadataValue.IsValid())
            {
                return matchSubmitTransactionFailureInvalidMetadata(matchSubmitTransactionFailureInvalidMetadataValue);
            }

            return defaultMatch(this);
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureEraMismatch(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEraMismatch>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureInvalidSignatories(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidSignatories>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureMissingRedeemers(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingRedeemers>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureExtraneousDatums(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousDatums>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureScriptIntegrityHashMismatch(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureScriptIntegrityHashMismatch>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureOrphanScriptInputs(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOrphanScriptInputs>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureMalformedScripts(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMalformedScripts>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureOutsideOfValidityInterval(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureOutsideOfValidityInterval>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureMissingSignatories(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingSignatories>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureTransactionTooLarge(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionTooLarge>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureValueTooLarge(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueTooLarge>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureEmptyInputSet(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyInputSet>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureTransactionFeeTooSmall(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTransactionFeeTooSmall>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureValueNotConserved(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureValueNotConserved>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureNetworkMismatch(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNetworkMismatch>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureInsufficientlyFundedOutputs(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientlyFundedOutputs>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureBootstrapAttributesTooLarge(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureBootstrapAttributesTooLarge>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureMintingOrBurningAda(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMintingOrBurningAda>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureInsufficientCollateral(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInsufficientCollateral>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureMissingScripts(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingScripts>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureCollateralLockedByScript(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCollateralLockedByScript>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureUnforeseeableSlot(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnforeseeableSlot>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureTooManyCollateralInputs(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTooManyCollateralInputs>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureMissingCollateralInputs(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingCollateralInputs>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureNonAdaCollateral(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonAdaCollateral>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureExecutionUnitsTooLarge(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExecutionUnitsTooLarge>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureTotalCollateralMismatch(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTotalCollateralMismatch>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureSpendsMismatch(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureSpendsMismatch>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureUnauthorizedVotes(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedVotes>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureUnknownGovernanceProposals(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownGovernanceProposals>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureFailingNativeScript(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureFailingNativeScript>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureInvalidProtocolParametersUpdate(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidProtocolParametersUpdate>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureUnknownStakePool(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownStakePool>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureIncompleteWithdrawals(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureIncompleteWithdrawals>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureRetirementTooLate(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureRetirementTooLate>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureStakePoolCostTooLow(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureStakePoolCostTooLow>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureMetadataHashTooLarge(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashTooLarge>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureCredentialAlreadyRegistered(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialAlreadyRegistered>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureUnknownCredential(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownCredential>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureNonEmptyRewardAccount(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureNonEmptyRewardAccount>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureInvalidGenesisDelegation(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidGenesisDelegation>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureExtraneousScripts(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureExtraneousScripts>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureInvalidMirTransfer(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMirTransfer>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureForbiddenWithdrawal(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureForbiddenWithdrawal>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureCredentialDepositMismatch(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureCredentialDepositMismatch>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureDRepAlreadyRegistered(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepAlreadyRegistered>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureDRepNotRegistered(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureDRepNotRegistered>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureUnknownConstitutionalCommitteeMember(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownConstitutionalCommitteeMember>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureGovernanceProposalDepositMismatch(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureGovernanceProposalDepositMismatch>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureConflictingCommitteeUpdate(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingCommitteeUpdate>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureInvalidCommitteeUpdate(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidCommitteeUpdate>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureTreasuryWithdrawalMismatch(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureTreasuryWithdrawalMismatch>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureMissingMetadataHash(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadataHash>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureInvalidOrMissingPreviousProposals(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidOrMissingPreviousProposals>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureVotingOnExpiredActions(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureVotingOnExpiredActions>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureInvalidHardForkVersionBump(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidHardForkVersionBump>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureConstitutionGuardrailsHashMismatch(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConstitutionGuardrailsHashMismatch>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureConflictingInputsAndReferences(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureConflictingInputsAndReferences>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureUnauthorizedGovernanceAction(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnauthorizedGovernanceAction>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureReferenceScriptsTooLarge(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureReferenceScriptsTooLarge>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureUnknownVoters(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnknownVoters>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureEmptyTreasuryWithdrawal(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureEmptyTreasuryWithdrawal>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureMissingMetadata(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMissingMetadata>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureUnexpectedMempoolError(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnexpectedMempoolError>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureUnrecognizedCertificateType(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureUnrecognizedCertificateType>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureMetadataHashMismatch(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureMetadataHashMismatch>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureInvalidMetadata(out Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailure.SubmitTransactionFailureInvalidMetadata>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureExecutionBudgetOutOfBounds(out Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailureExecutionBudgetOutOfBounds>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureExtraneousRedeemers(out Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailureExtraneousRedeemers>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailureMissingCostModels" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureMissingCostModels(out Generated.Ogmios.SubmitTransactionFailureMissingCostModels result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailureMissingCostModels>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailureMissingDatums" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureMissingDatums(out Generated.Ogmios.SubmitTransactionFailureMissingDatums result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailureMissingDatums>();
            return result.IsValid();
        }

        /// <summary>
        /// Gets the value as a <see cref="Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference" />.
        /// </summary>
        /// <param name="result">The result of the conversions.</param>
        /// <returns><see langword="true" /> if the conversion was valid.</returns>
        public bool TryGetAsSubmitTransactionFailureUnknownOutputReference(out Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference result)
        {
            result = this.As<Generated.Ogmios.SubmitTransactionFailureUnknownOutputReference>();
            return result.IsValid();
        }
    }
}
